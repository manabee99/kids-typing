{"version":3,"sources":["sounds/bgm-title@happytime.mp3","sounds/bgm-stage-sakura@sanjinooyatsu.mp3","sounds/bgm-stage-sunflower@lovelyflower.mp3","sounds/bgm-stage-goldfish@retropark.mp3","sounds/bgm-stage-seabed@retrogamecenter2.mp3","sounds/bgm-stage-halloween@sunadokeiseiun.mp3","sounds/bgm-ending@chocolatedaisakusen.mp3","sounds/bgm-stage-end@nichinichikorekoujitsu.mp3","sounds/se-title-start.mp3","sounds/se-success.mp3","sounds/se-miss.mp3","sounds/se-stage-sakura-start@rappa.mp3","sounds/se-fire-character@jump13.mp3","sounds/se-voice-ready.mp3","sounds/se-voice-go.mp3","sounds/se-voice-count-down.mp3","sounds/se-voice-congratulation.mp3","sounds/se-voice-good-job.mp3","sounds/se-voice-soon-after.mp3","sounds/se-voice-pity.mp3","components/pages/practice-page/presentations/header/RemainingTime.tsx","components/pages/practice-page/presentations/header/SuccessCounter.tsx","components/effect-layer/EFCorrect.tsx","components/effect-layer/EFMiss.tsx","components/effect-layer/EFInputCursor.tsx","components/effect-layer/EffectLayer.tsx","components/pages/practice-page/presentations/PracticeStartAnimation.tsx","components/pages/practice-page/presentations/stages/common/Character.tsx","components/pages/practice-page/presentations/stages/sakura/CharacterSakura.tsx","components/pages/practice-page/presentations/stages/sakura/CharacterBird.tsx","components/pages/practice-page/presentations/stages/sakura/StageSakura.tsx","components/common/SoundEffect.tsx","components/common/BackgroundMusic.tsx","SoundResources.ts","components/pages/practice-page/presentations/header/MissCounter.tsx","components/pages/practice-page/presentations/PracticeEndAnimation.tsx","components/pages/practice-page/presentations/keyboard/Keycap.tsx","components/pages/practice-page/presentations/keyboard/Keyboard.tsx","components/pages/practice-page/presentations/stages/sunflower/CharacterDragonfly.tsx","components/pages/practice-page/presentations/stages/sunflower/CharacterLadybird.tsx","components/pages/practice-page/presentations/stages/sunflower/StageSunflower.tsx","components/pages/practice-page/presentations/stages/goldfish/CharacterGoldfish.tsx","components/pages/practice-page/presentations/stages/goldfish/CharacterBlackfish.tsx","components/pages/practice-page/presentations/stages/goldfish/CharacterCatfish.tsx","components/pages/practice-page/presentations/stages/goldfish/StageGoldfish.tsx","components/pages/practice-page/presentations/stages/seabed/CharacterTurtle.tsx","components/pages/practice-page/presentations/stages/seabed/CharacterOctopus.tsx","components/pages/practice-page/presentations/stages/seabed/CharacterBlowfish.tsx","components/pages/practice-page/presentations/stages/seabed/CharacterShark.tsx","components/pages/practice-page/presentations/stages/seabed/StageSeabed.tsx","components/pages/practice-page/presentations/stages/helloween/CharacterBat.tsx","components/pages/practice-page/presentations/stages/helloween/CharacterBlackCat.tsx","components/pages/practice-page/presentations/stages/helloween/CharacterGhost.tsx","components/pages/practice-page/presentations/stages/helloween/CharacterPumpkin.tsx","components/pages/practice-page/presentations/stages/helloween/CharacterWitch.tsx","components/pages/practice-page/presentations/stages/helloween/StageHalloween.tsx","components/pages/practice-page/PracticePageForm.tsx","store/actions/TypingEngineAction.ts","store/actions/TitleAction.ts","store/actions/KeyboardActions.ts","store/actions/SoundActions.ts","store/actions/HeaderActions.ts","store/reducers/HeaderReducer.ts","store/reducers/TitleReducer.ts","store/reducers/TypingEngineReducer.ts","store/reducers/KeyboardReducer.ts","store/reducers/SoundReducer.ts","store/actions/EndingAction.ts","store/reducers/EndingReducer.ts","store/KidsTypingStore.ts","containers/PracticePageContainer.ts","components/pages/title-page/presentations/TitleLogo.tsx","components/pages/title-page/presentations/PracticeLevelLabel.tsx","components/pages/title-page/presentations/PracticeStartButton.tsx","components/pages/title-page/presentations/PracticeLevelResetButton.tsx","components/pages/title-page/presentations/MuteButton.tsx","components/pages/title-page/TitlePageForm.tsx","containers/TitlePageContainer.ts","components/pages/ending-page/presentations/EndingLogo.tsx","components/pages/ending-page/EndingPageForm.tsx","containers/EndingPageContainer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","RemainingTime","props","cls","className","key","remainingTime","SuccessCounter","successCount","EfCorrect","style","top","left","width","height","EfMiss","EfInputCursor","characterStateList","length","practiceCharacterType","opacity","EffectLayer","Fragment","effectStateList","flatMap","effectState","effectType","effectId","componentId","PracticeStartAnimation","onAnimationEnd","animationEnd","Character","indexOf","character","CharacterSakura","Math","round","CharacterBird","PracticeStageSakura","characters","forEach","c","idx","componentAttr","isHead","charcterState","characterState","push","SoundEffect","soundMuting","soundEffects","soundEffectList","filter","soundStatus","url","soundEffectId","src","autoPlay","BackgroundMusic","bgmStatus","playStatus","autoLoad","loop","SoundResources","bgmTitle","require","bgmStageSakura","bgmStageSunflower","bgmStageGoldfish","bgmStageSeabed","bgmStageHalloween","bgmEnding","bgmStageEnd","seTitleStart","seSuccess","seMiss","seStagesakuraStart","seFireCharacter","seVoiceReady","seVoiceGo","seVoiceCountDown","seVoiceCongratulation","seVoiceGoodJob","seVoiceSoonAfter","seVoicePity","MissCounter","missCount","PracticeEndAnimation","animations","practiceCompleted","levelUp","Keycap","keyClassName","keys","m","keycapCharacter","enabledKey","keyDown","Keyboard","allKeys","Array","from","order","enabledKeys","downKeys","CharacterDragonfly","CharacterLadybird","PracticeStageSunflower","CharacterGoldfish","CharacterBlackfish","CharacterCatfish","PracticeStageGoldfish","CharacterTurtle","CharacterOctopus","CharacterBlowfish","CharacterShark","PracticeStageSeabed","CharacterBat","CharacterBlackCat","CharacterGhost","CharacterPumpkin","CharacterWitch","PracticeStageHalloween","PracticePageForm","playingStartBgm","playingCountdownSe","playingResultSe","playingStageEndBgm","this","successCounter","missCounter","position","practiceStageType","bind","endAnimationEnd","effectorStateList","onKeyDown","e","onKeyUp","keyUp","downedKeys","initilizeStage","playingBgm","currentBgmUrl","setTimeout","playingSoundEffect","startAnimationEnd","React","Component","actionCreator","actionCreatorFactory","TypingEngineActions","SELECTED_PRACTICE_STAGE","SELECTED_CHARACTER_TYPE","RESET_ENGINE","START_PRACTICE","FIRE_CHARACTER","INPUT_CHARACTER","TICK","TitleActions","LOAD_PRACTICE_LEVEL","UPDATE_PRACTICE_LEVEL","SELECT_PRACTICE_LEVEL","PRACTICE_LEVEL_UP","RESET_PRACTICE_LEVEL","OPEN_DIALOG","CLOSE_DIALOG","KeyboardActions","RESET_KEYBOARD","ENABLED_KEYS","KEY_DOWN","KEY_UP","SoundActions","CHANGED_BGM","PLAYING_BGM","STOPPED_BGM","PLAYING_SOUND_EFFECT","STOPPED_SOUND_EFFECT","MUTE","UNMUTE","HeaderActions","RESET_SUCCESS_COUNTER","ADD_SUCCESS_COUNTER","RESET_MISS_COUNTER","ADD_MISS_COUNTER","UPDATE_REMAINING_TIME","headerReducer","reducerWithInitialState","case","state","payload","titleReducer","practiceLevel","openedDialog","practiceLevelStr","window","localStorage","getItem","Number","setItem","toString","MAX_PRACTICE_LEVEL","typingEngineReducer","useCharacterTypes","practiceStartTime","practiceTime","componentIdSequence","effectIdSequence","stageType","characterTypes","Date","getTime","startTime","characterType","floor","random","hasShake","concat","XAcceleration","YAcceleration","slice","nowTime","map","tickCharacterTop","tickCharacterLeft","tickCharacterYAcceleration","findIndex","ef","yAcceleration","max","min","xAcceleration","acc1","acc2","keyboardReducer","soundReducer","playStartTime","soundEffectIdSequence","bgmUrl","soundUrl","EndingActions","FADE_OUT_ENDING","endingReducer","fadeOut","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","titleState","endingState","typingEngineState","headerState","keyboardState","soundState","applyMiddleware","thunk","connect","appState","dispatch","resetSuccessCounter","addSuccessCounter","resetMissCounter","addMissCounter","resetKeyboard","selectStage","stageConfig","getStageConfig","getState","backgroundMusic","addEventListener","toLocaleUpperCase","initializeStage","practiceCharacters","characterCount","sourceCharacter","importantCharacter","i","charactersArray","substr","idx1","idx2","chara1","chara2","createPracticeCaracters","importantKeys","intervalHandle","setInterval","main","fireInterval","startPractice","previousLevel","clearInterval","location","replace","process","endPractice","stoppedBgm","stoppedSoundEffect","cnt","fireCharaIndex","fps","practiceCharacter","console","log","TitleLogo","PracticeLevelLabel","PracticeStartButton","onClick","PracticeLevelResetButton","openDialog","Dialog","open","onClose","closeDialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","resetPracticeLevel","MuteButton","soundMute","TitlePageForm","onPracticeStart","toggleSoundMute","loadPracticeLevel","match","params","withRouter","EndingLogo","EndingPageForm","zIndex","startEnding","fadeOutEnding","endEnding","App","basename","path","exact","to","component","TitlePageContainer","PracticePageContainer","EndingPageContainer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.24dc1c3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgm-title@happytime.c45367d2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-sakura@sanjinooyatsu.99ca7ff6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-sunflower@lovelyflower.0d1f4fda.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-goldfish@retropark.77ab81b7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-seabed@retrogamecenter2.d2f8d4e0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-halloween@sunadokeiseiun.6d81b79e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-ending@chocolatedaisakusen.c4575386.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bgm-stage-end@nichinichikorekoujitsu.d1b48e24.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-title-start.84ec48eb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-success.75de09cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-miss.8bf494ca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-stage-sakura-start@rappa.40e914b9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-fire-character@jump13.ffef03c6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-ready.e4c43128.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-go.7301e778.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-count-down.ce00be93.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-congratulation.c61cc0ef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-good-job.b0b324a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-soon-after.7fac2dbf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/se-voice-pity.c92346f8.mp3\";","import React from 'react';\r\n\r\nimport '../../../../common/KidsTypingCommon.css';\r\nimport '../../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 残り時間Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 残り時間\r\n  remainingTime: number;\r\n}\r\n\r\ntype RemainingTimeProps = OwnProps;\r\nexport const RemainingTime: React.FC<RemainingTimeProps> = (props) => {\r\n  const cls = {\r\n    frame: 'remaining-time-frame',\r\n    valueFadein: 'kt-font-bold-stroke remaining-time-base remaining-time-fadein',\r\n    beforeValue: 'kt-font-bold-stroke remaining-time-base remaining-time-before',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.frame} key={'remaining-time' + props.remainingTime}>\r\n      {/* カウンター値（現在の値） */}\r\n      <div className={cls.valueFadein}>{props.remainingTime}</div>\r\n\r\n      {/* 一つ前のカウンター値（値が変化したときのアニメーション用要素） */}\r\n      {props.remainingTime < 60 ? <div className={cls.beforeValue}>{props.remainingTime + 1}</div> : <div></div>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../common/KidsTypingCommon.css';\r\nimport '../../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 正解カウンターComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 正解数\r\n  successCount: number;\r\n}\r\n\r\ntype SuccessCounterProps = OwnProps;\r\nexport const SuccessCounter: React.FC<SuccessCounterProps> = (props) => {\r\n  const cls = {\r\n    frame: 'success-counter-frame',\r\n    title: 'kt-font-bold-stroke success-counter-title',\r\n    valueFrame: 'success-counter-value-frame',\r\n    valueFadein: 'kt-font-bold-stroke success-counter-value-base success-counter-value-fadein',\r\n    beforeValue: 'kt-font-bold-stroke success-counter-value-base success-counter-before-value',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      {/* タイトル */}\r\n      <div className={cls.title}>せいかい</div>\r\n\r\n      {/* 値の枠（keyにカウンター値を設定することでCSSアニメーションを設定したエレメントの再描画を抑止している） */}\r\n      <div className={cls.valueFrame} key={'success-counter' + props.successCount}>\r\n        {/* カウンター値（現在の値） */}\r\n        <div className={cls.valueFadein}>{props.successCount}</div>\r\n\r\n        {/* 一つ前のカウンター値（値が変化したときのアニメーション用要素） */}\r\n        {props.successCount > 0 ? <div className={cls.beforeValue}>{props.successCount - 1}</div> : <div></div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport '../common/KidsTypingCommon.css';\r\nimport \"./EffectLayer.css\";\r\n\r\n// --------------------------------------------\r\n// 正解用のエフェクトComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // サイズ（幅）\r\n  width: number;\r\n\r\n  // サイズ（高さ）\r\n  height: number;\r\n}\r\n\r\ntype EFCorrectProps = OwnProps;\r\nexport const EfCorrect: React.FC<EFCorrectProps> = (props) => {\r\n  return (\r\n    <div\r\n      className=\"kt-flex-vertical-center ef-correct\"\r\n      style={{\r\n        top: props.top,\r\n        left: props.left,\r\n        width: props.width,\r\n        height: props.height,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport '../common/KidsTypingCommon.css';\r\nimport \"./EffectLayer.css\";\r\n\r\n// --------------------------------------------\r\n// ミス用のエフェクトComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // サイズ（幅）\r\n  width: number;\r\n\r\n  // サイズ（高さ）\r\n  height: number;\r\n}\r\n\r\ntype EFMissProps = OwnProps;\r\nexport const EfMiss: React.FC<EFMissProps> = (props) => {\r\n  return (\r\n    <div\r\n      className=\"kt-flex-vertical-center ef-miss\"\r\n      style={{\r\n        top: props.top - 12,\r\n        left: props.left - 12,\r\n        width: props.width,\r\n        height: props.height,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport '../common/KidsTypingCommon.css';\r\nimport \"./EffectLayer.css\";\r\n\r\nimport { CharacterState } from '../../store/reducers/TypingEngineReducer';\r\n\r\n// --------------------------------------------\r\n// 「文字」のカーソル用のエフェクトComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype EFInputCursorProps = OwnProps;\r\nexport const EfInputCursor: React.FC<EFInputCursorProps> = (props) => {\r\n\r\n  if (props.characterStateList.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"ef-input-cursor\"\r\n      // 文字種別が「黒猫」である場合のみ、カーソルの表示位置を少し上にする\r\n      style={{\r\n        top: props.characterStateList[0].top - (props.characterStateList[0].practiceCharacterType === 'blackcat' ?  30 : 12),\r\n        left: props.characterStateList[0].left - 12,\r\n        opacity: 0.5,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../common/KidsTypingCommon.css';\r\nimport './EffectLayer.css';\r\n\r\nimport { EfCorrect } from './EFCorrect';\r\nimport { EfMiss } from './EFMiss';\r\nimport { EfInputCursor } from './EFInputCursor';\r\nimport { EffectorState, CharacterState } from '../../store/reducers/TypingEngineReducer';\r\n\r\n// --------------------------------------------\r\n// 画面全体に重るエフェクトレイヤーComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // エフェクトリスト\r\n  effectStateList: EffectorState[];\r\n\r\n  // エフェクトリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype EffectLayerProps = OwnProps;\r\nexport const EffectLayer: React.FC<EffectLayerProps> = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {/* エフェクトレイヤーの外枠（練習ステージに重ねて表示） */}\r\n      <div className='effect-layer-frame'>\r\n        {props.effectStateList.flatMap((effectState) => {\r\n          if (effectState.effectType === 'InputSuccess') {\r\n            // 正解エフェクト\r\n            return (\r\n              <div key={effectState.effectId}>\r\n                <EfCorrect componentId={effectState.effectId} top={effectState.top} left={effectState.left} width={150} height={150}></EfCorrect>\r\n              </div>\r\n            );\r\n          } else if (effectState.effectType === 'InputMiss') {\r\n            // 失敗エフェクト\r\n            return (\r\n              <div key={effectState.effectId}>\r\n                <EfMiss componentId={effectState.effectId} top={effectState.top} left={effectState.left} width={150} height={150}></EfMiss>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div key={effectState.effectId}></div>;\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      {/* 「文字」のカーソル */}\r\n      <div className='effect-layer-frame' key='ef-input-cursor'>\r\n        <EfInputCursor characterStateList={props.characterStateList}></EfInputCursor>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 練習開始アニメーション Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  animationEnd: Function;\r\n}\r\n\r\ntype PracticeStartAnimationProps = OwnProps;\r\nexport const PracticeStartAnimation: React.FC<PracticeStartAnimationProps> = (props) => {\r\n  const cls = {\r\n    frame: 'kt-box-fit parctice-start-animation-layer-frame',\r\n    animation01: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-1',\r\n    animation02: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-2',\r\n    animation03: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-3',\r\n    animation04: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-4',\r\n    animation05: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-5',\r\n    animation06: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-start-animation-base practice-start-animation-6',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      {/* 各アニメーションクラスのアニメーション開始時間を設定することで、順番にアニメーションが動作するようになっている */}\r\n      <div className={cls.animation01}>5</div>\r\n      <div className={cls.animation02}>4</div>\r\n      <div className={cls.animation03}>3</div>\r\n      <div className={cls.animation04}>2</div>\r\n      <div className={cls.animation05}>1</div>\r\n      <div className={cls.animation06} onAnimationEnd={() => props.animationEnd()}>\r\n        Start!!\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（画像の上に乗せる文字のみ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 表示位置（top）\r\n  top?: number;\r\n\r\n  // 表示位置（left）\r\n  left?: number;\r\n\r\n  // 表示する文字\r\n  character: string;\r\n}\r\n\r\ntype CharacterProps = OwnProps;\r\nexport const Character: React.FC<CharacterProps> = (props) => {\r\n  return (\r\n    <div\r\n      className={'kt-flex-vertical-center character-base ' + ('0123456789'.indexOf(props.character) !== -1 ? 'character-number' : '')}\r\n      style={{ top: props.top ? props.top : 0, left: props.left ? props.left : 0 }}\r\n    >\r\n      {props.character}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（桜）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterSakuraProps = OwnProps;\r\nexport const CharacterSakura: React.FC<CharacterSakuraProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'sakura' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-sakura'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（小鳥）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterBirdProps = OwnProps;\r\nexport const CharacterBird: React.FC<CharacterBirdProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'bird' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-bird'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={30} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\nimport { CharacterSakura } from './CharacterSakura';\r\nimport { CharacterBird } from './CharacterBird';\r\nimport { CharacterState } from '../../../../../../store/reducers/TypingEngineReducer';\r\n\r\n// --------------------------------------------\r\n// 練習ステージ（桜）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 入力文字ステータスリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype PracticeStageSakuraProps = OwnProps;\r\nexport const PracticeStageSakura: React.FC<PracticeStageSakuraProps> = (props) => {\r\n  const characters: any = [];\r\n  props.characterStateList.forEach((c, idx) => {\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n    if (c.practiceCharacterType === 'sakura') {\r\n      characters.push(<CharacterSakura {...componentAttr}></CharacterSakura>);\r\n    } else if (c.practiceCharacterType === 'bird') {\r\n      characters.push(<CharacterBird {...componentAttr}></CharacterBird>);\r\n    }\r\n  });\r\n\r\n  return <div className='kt-floating-frame kt-flex-horizontal-left practice-stage-sakura-frame'>{characters}</div>;\r\n};\r\n","import React from 'react';\r\nimport { SoundStatus } from '../../store/reducers/SoundReducer';\r\n\r\n\r\n// --------------------------------------------\r\n// 効果音 Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  soundEffectList: SoundStatus[];\r\n  soundMuting: boolean;\r\n}\r\n\r\ntype SoundEffectProps = OwnProps;\r\nexport const SoundEffect: React.FC<SoundEffectProps> = (props) => {\r\n  if (props.soundMuting) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const soundEffects: any = [];\r\n  props.soundEffectList\r\n    .filter((soundStatus) => soundStatus.url !== '' && soundStatus.soundStatus === 'PLAYING')\r\n    .flatMap((soundStatus) => {\r\n      soundEffects.push(\r\n        <div key={'se-' + soundStatus.soundEffectId}>\r\n          <audio src={soundStatus.url} autoPlay></audio>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return <div>{soundEffects}</div>;\r\n};\r\n","import React from 'react';\r\nimport Sound from 'react-sound';\r\nimport { SoundStatus } from '../../store/reducers/SoundReducer';\r\n\r\n\r\n// --------------------------------------------\r\n// BGM Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  bgmStatus: SoundStatus;\r\n  soundMuting: boolean;\r\n}\r\n\r\ntype BackgroundMusicProps = OwnProps;\r\nexport const BackgroundMusic: React.FC<BackgroundMusicProps> = (props) => {\r\n  return (\r\n    <div key={'bgm'}>\r\n      {props.soundMuting === false ? (\r\n        <Sound\r\n          url={props.bgmStatus.url}\r\n          playStatus={props.bgmStatus.soundStatus}\r\n          autoLoad={true}\r\n          loop={true}\r\n        ></Sound>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","\r\nexport const SoundResources = {\r\n\r\n  // bgmStageStart: require('./sounds/bgm-stage-start@suisougakubunonatsu.mp3'),\r\n  bgmTitle: require('./sounds/bgm-title@happytime.mp3'),\r\n  // bgmStageStart: require('./sounds/bgm-stage-start@sanjinooyatsu.mp3'),  \r\n  bgmStageSakura: require('./sounds/bgm-stage-sakura@sanjinooyatsu.mp3'),\r\n  bgmStageSunflower: require('./sounds/bgm-stage-sunflower@lovelyflower.mp3'),\r\n  bgmStageGoldfish: require('./sounds/bgm-stage-goldfish@retropark.mp3'),\r\n  bgmStageSeabed: require('./sounds/bgm-stage-seabed@retrogamecenter2.mp3'),\r\n  bgmStageHalloween: require('./sounds/bgm-stage-halloween@sunadokeiseiun.mp3'),\r\n  \r\n  bgmEnding: require('./sounds/bgm-ending@chocolatedaisakusen.mp3'),\r\n  \r\n  bgmStageEnd: require('./sounds/bgm-stage-end@nichinichikorekoujitsu.mp3'),\r\n  \r\n  seTitleStart: require('./sounds/se-title-start.mp3'),\r\n  seSuccess: require('./sounds/se-success.mp3'),\r\n  seMiss: require('./sounds/se-miss.mp3'),\r\n  // seStagesakuraStart: require('./sounds/se-stage-sakura-start@blackout_piano1.mp3'),\r\n  seStagesakuraStart: require('./sounds/se-stage-sakura-start@rappa.mp3'),\r\n\r\n\r\n  seFireCharacter: require('./sounds/se-fire-character@jump13.mp3'),\r\n\r\n  seVoiceReady: require('./sounds/se-voice-ready.mp3'),\r\n  seVoiceGo: require('./sounds/se-voice-go.mp3'),\r\n  seVoiceCountDown: require('./sounds/se-voice-count-down.mp3'),\r\n  seVoiceCongratulation: require('./sounds/se-voice-congratulation.mp3'),\r\n  seVoiceGoodJob: require('./sounds/se-voice-good-job.mp3'),\r\n  seVoiceSoonAfter: require('./sounds/se-voice-soon-after.mp3'),\r\n  seVoicePity: require('./sounds/se-voice-pity.mp3'),\r\n}\r\n","import React from 'react';\r\n\r\nimport '../../../../common/KidsTypingCommon.css';\r\nimport '../../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 失敗カウンターComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 失敗数\r\n  missCount: number;\r\n}\r\n\r\ntype MissCounterProps = OwnProps;\r\nexport const MissCounter: React.FC<MissCounterProps> = (props) => {\r\n  const cls = {\r\n    frame: 'miss-counter-frame',\r\n    title: 'kt-font-bold-stroke miss-counter-title',\r\n    valueFrame: 'miss-counter-value-frame',\r\n    valueFadein: 'kt-font-bold-stroke miss-counter-value-base miss-counter-value-fadein',\r\n    beforeValue: 'kt-font-bold-stroke miss-counter-value-base miss-counter-before-value',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      {/* タイトル */}\r\n      <div className={cls.title}>まちがえ</div>\r\n\r\n      {/* 値の枠（keyにカウンター値を設定することでCSSアニメーションを設定したエレメントの再描画を抑止している） */}\r\n      <div className={cls.valueFrame} key={'miss-counter' + props.missCount}>\r\n        {/* カウンター値（現在の値） */}\r\n        <div className={cls.valueFadein}>{props.missCount}</div>\r\n\r\n        {/* 一つ前のカウンター値（値が変化したときのアニメーション用要素） */}\r\n        {props.missCount > 0 ? <div className={cls.beforeValue}>{props.missCount - 1}</div> : <div></div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 練習終了アニメーション Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // レベルアップフラグ（true: レベルアップした、false: レベルアップしなかった）\r\n  levelUp: boolean;\r\n\r\n  // 練習完了フラグ\r\n  practiceCompleted: boolean;\r\n\r\n  // アニメーション終了\r\n  animationEnd: Function;\r\n}\r\n\r\ntype PracticeEndAnimationProps = OwnProps;\r\nexport const PracticeEndAnimation: React.FC<PracticeEndAnimationProps> = (props) => {\r\n  const cls = {\r\n    frame: 'kt-box-fit practice-end-animation-layer-frame',\r\n    animation01: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-end-animation-base practice-end-animation-1',\r\n    animation02: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-end-animation-base practice-end-animation-2',\r\n    animation03: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-end-animation-base practice-end-animation-3',\r\n    animation04: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-end-animation-base practice-end-animation-4',\r\n    animation05: 'kt-box-fit kt-flex-vertical-center kt-font-bold-stroke practice-end-animation-base practice-end-animation-5',\r\n  };\r\n\r\n  var animations: any = [];\r\n  if (props.practiceCompleted) {\r\n    animations.push(<div className={cls.animation01}>おしまい</div>);\r\n    animations.push(<div className={cls.animation02}>おつかれさま！</div>);\r\n    animations.push(\r\n      <div className={cls.animation03}>\r\n        まだまだ<br></br>いけるね\r\n      </div>\r\n    );\r\n    animations.push(\r\n      <div className={cls.animation04} onAnimationEnd={() => props.animationEnd()}>\r\n        このちょうしで<br></br>がんばろう！\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.levelUp) {\r\n      animations.push(<div className={cls.animation01}>おしまい</div>);\r\n      animations.push(<div className={cls.animation02}>おつかれさま！</div>);\r\n      animations.push(\r\n        <div className={cls.animation03}>\r\n          れんしゅうの<br></br>けっかは！！\r\n        </div>\r\n      );\r\n      animations.push(\r\n        <div className={cls.animation04 + ' practice-end-level-up'} onAnimationEnd={() => props.animationEnd()}>\r\n          レベルアップ\r\n        </div>\r\n      );\r\n    } else {\r\n      animations.push(<div className={cls.animation01}>おしまい</div>);\r\n      animations.push(<div className={cls.animation02}>おつかれさま！</div>);\r\n      animations.push(\r\n        <div className={cls.animation03}>\r\n          れんしゅうの<br></br>けっかは！！\r\n        </div>\r\n      );\r\n      animations.push(\r\n        <div className={cls.animation05} onAnimationEnd={() => props.animationEnd()}>\r\n          もういっかい<br></br>がんばろう\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      {/* 各アニメーションクラスのアニメーション開始時間を設定することで、順番にアニメーションが動作するようになっている */}\r\n      {animations}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../common/KidsTypingCommon.css';\r\nimport '../../PracticePageForm.css';\r\n\r\n// --------------------------------------------\r\n// キーボードのキーComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // キーの文字\r\n  keycapCharacter: string;\r\n\r\n  // 無効化\r\n  enabledKey: boolean;\r\n\r\n  // 押下中\r\n  keyDown: boolean;\r\n}\r\n\r\ntype KeycapProps = OwnProps;\r\nexport const Keycap: React.FC<KeycapProps> = (props) => {\r\n  const cls = {\r\n    frame: 'keycap-frame',\r\n  };\r\n\r\n  const keyClassMap = [\r\n    { keys: '1QAZ', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-left-first-finger' },\r\n    { keys: '2WSX', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-left-second-finger' },\r\n    { keys: '3EDC', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-left-third-finger' },\r\n    { keys: '45RTFGVB', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-left-forth-finger' },\r\n    { keys: '67YUHJNM', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-right-first-finger' },\r\n    { keys: '8IK,', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-right-second-finger' },\r\n    { keys: '9OL.', className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-right-third-finger' },\r\n    {\r\n      keys: '0P+/-@*_^[]\\\\',\r\n      className: 'kt-floating-frame kt-flex-vertical-center kt-box-shadow kt-font keycap-body-base keycap-right-forth-finger',\r\n    },\r\n  ];\r\n  var keyClassName = keyClassMap.filter((m) => m.keys.indexOf(props.keycapCharacter) !== -1)[0].className;\r\n\r\n  keyClassName += props.enabledKey === false ? ' keycap-body-disabled' : props.keyDown ? ' keycap-body-down' : ' keycap-body';\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      {/* キー */}\r\n      <div className={keyClassName}>{props.keycapCharacter}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../common/KidsTypingCommon.css';\r\nimport '../../PracticePageForm.css';\r\n\r\nimport { Keycap } from './Keycap';\r\n\r\n// --------------------------------------------\r\n// キーボードComponent\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // キーDOWNイベントハンドラー\r\n  onKeyDown: Function;\r\n\r\n  // キーUPイベントハンドラー\r\n  onKeyUp: Function;\r\n\r\n  // 有効化キー\r\n  enabledKeys: string[];\r\n\r\n  // 押下中キー\r\n  downKeys: string[];\r\n}\r\n\r\ntype KeyboardProps = OwnProps;\r\nexport const Keyboard: React.FC<KeyboardProps> = (props) => {\r\n  // キー配列\r\n  const keyOrderLine = ['1234567890-^\\\\', 'QWERTYUIOP@[', 'ASDFGHJKL+*]', 'ZXCVBNM,./_'];\r\n\r\n  // キー配列に合わせてキーコンポーネントを生成する\r\n  const allKeys: Array<any>[] = [];\r\n  Array.from(keyOrderLine).forEach((order) => {\r\n    var keys: any = [];\r\n    Array.from(order).forEach((c) => {\r\n      keys.push(<Keycap keycapCharacter={c} enabledKey={props.enabledKeys.indexOf(c) !== -1} keyDown={props.downKeys.indexOf(c) !== -1}></Keycap>);\r\n    });\r\n    allKeys.push(keys);\r\n  });\r\n\r\n  const cls = {\r\n    frame: 'kt-flex-vertical-center keyboard-frame',\r\n    firstRow: 'kt-flex-horizontal-left keyboard-first-row-frame',\r\n    secondRow: 'kt-flex-horizontal-left keyboard-second-row-frame',\r\n    theardRow: 'kt-flex-horizontal-left keyboard-theard-row-frame',\r\n    lastRow: 'kt-flex-horizontal-left fkkeyboard-last-row-frame',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.frame}>\r\n      <div className={cls.firstRow}>{allKeys[0]}</div>\r\n      <div className={cls.secondRow}>{allKeys[1]}</div>\r\n      <div className={cls.theardRow}>{allKeys[2]}</div>\r\n      <div className={cls.lastRow}>{allKeys[3]}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（とんぼ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterDragonflyProps = OwnProps;\r\nexport const CharacterDragonfly: React.FC<CharacterDragonflyProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'dragonfly' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-dragonfly'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={20} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（てんとうむし）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterLadybirdProps = OwnProps;\r\nexport const CharacterLadybird: React.FC<CharacterLadybirdProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'ladybird' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-ladybird'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={30} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\nimport { CharacterState } from '../../../../../../store/reducers/TypingEngineReducer';\r\nimport { CharacterDragonfly } from './CharacterDragonfly';\r\nimport { CharacterLadybird } from './CharacterLadybird';\r\n\r\n// --------------------------------------------\r\n// 練習ステージ（ひまわり）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 入力文字ステータスリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype PracticeStageSunflowerProps = OwnProps;\r\nexport const PracticeStageSunflower: React.FC<PracticeStageSunflowerProps> = (props) => {\r\n  const characters: any = [];\r\n  props.characterStateList.forEach((c, idx) => {\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n    if (c.practiceCharacterType === 'dragonfly') {\r\n      characters.push(<CharacterDragonfly {...componentAttr}></CharacterDragonfly>);\r\n    } else if (c.practiceCharacterType === 'ladybird') {\r\n      characters.push(<CharacterLadybird {...componentAttr}></CharacterLadybird>);\r\n    }\r\n  });\r\n\r\n  return <div className='kt-floating-frame kt-flex-horizontal-left practice-stage-sunflower-frame'>{characters}</div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（金魚）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterGoldfishProps = OwnProps;\r\nexport const CharacterGoldfish: React.FC<CharacterGoldfishProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'goldfish' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-goldfish'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（出目金）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterBlackfishProps = OwnProps;\r\nexport const CharacterBlackfish: React.FC<CharacterBlackfishProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'blackfish' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-blackfish'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character top={15} left={35} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（なまず）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterCatfishProps = OwnProps;\r\nexport const CharacterCatfish: React.FC<CharacterCatfishProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'catfish' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-catfish'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\nimport { CharacterState } from '../../../../../../store/reducers/TypingEngineReducer';\r\nimport { CharacterGoldfish } from './CharacterGoldfish';\r\nimport { CharacterBlackfish } from './CharacterBlackfish';\r\nimport { CharacterCatfish } from './CharacterCatfish';\r\n\r\n// --------------------------------------------\r\n// 練習ステージ（金魚）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 入力文字ステータスリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype PracticeStageGoldfishProps = OwnProps;\r\nexport const PracticeStageGoldfish: React.FC<PracticeStageGoldfishProps> = (props) => {\r\n  const characters: any = [];\r\n  props.characterStateList.forEach((c, idx) => {\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n    if (c.practiceCharacterType === 'goldfish') {\r\n      characters.push(<CharacterGoldfish {...componentAttr}></CharacterGoldfish>);\r\n    } else if (c.practiceCharacterType === 'blackfish') {\r\n      characters.push(<CharacterBlackfish {...componentAttr}></CharacterBlackfish>);\r\n    } else if (c.practiceCharacterType === 'catfish') {\r\n      characters.push(<CharacterCatfish {...componentAttr}></CharacterCatfish>);\r\n    }\r\n  });\r\n\r\n  return <div className='kt-floating-frame kt-flex-horizontal-left practice-stage-goldfish-frame'>{characters}</div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（亀）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterTurtleProps = OwnProps;\r\nexport const CharacterTurtle: React.FC<CharacterTurtleProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'turtle' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-turtle'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={30} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（タコ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterOctopusProps = OwnProps;\r\nexport const CharacterOctopus: React.FC<CharacterOctopusProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'octopus' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-octopus'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character top={50} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（フグ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterBlowfishProps = OwnProps;\r\nexport const CharacterBlowfish: React.FC<CharacterBlowfishProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'blowfish' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-blowfish'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（サメ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterSharkProps = OwnProps;\r\nexport const CharacterShark: React.FC<CharacterSharkProps> = (props) => {\r\n  return (\r\n    <div\r\n      key={'shark' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-shark'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={20} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\nimport { CharacterState } from '../../../../../../store/reducers/TypingEngineReducer';\r\nimport { CharacterTurtle } from './CharacterTurtle';\r\nimport { CharacterOctopus } from './CharacterOctopus';\r\nimport { CharacterBlowfish } from './CharacterBlowfish';\r\nimport { CharacterShark } from './CharacterShark';\r\n\r\n// --------------------------------------------\r\n// 練習ステージ（海底）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 入力文字ステータスリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype PracticeStageSeabedProps = OwnProps;\r\nexport const PracticeStageSeabed: React.FC<PracticeStageSeabedProps> = (props) => {\r\n  const characters: any = [];\r\n  props.characterStateList.forEach((c, idx) => {\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n    if (c.practiceCharacterType === 'turtle') {\r\n      characters.push(<CharacterTurtle {...componentAttr}></CharacterTurtle>);\r\n    } else if (c.practiceCharacterType === 'octopus') {\r\n      characters.push(<CharacterOctopus {...componentAttr}></CharacterOctopus>);\r\n    } else if (c.practiceCharacterType === 'blowfish') {\r\n      characters.push(<CharacterBlowfish {...componentAttr}></CharacterBlowfish>);\r\n    } else if (c.practiceCharacterType === 'shark') {\r\n      characters.push(<CharacterShark {...componentAttr}></CharacterShark>);\r\n    }\r\n  });\r\n\r\n  return <div className='kt-floating-frame kt-flex-horizontal-left practice-stage-seabed-frame'>{characters}</div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（コウモリ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterBat = OwnProps;\r\nexport const CharacterBat: React.FC<CharacterBat> = (props) => {\r\n  return (\r\n    <div\r\n      key={'bat' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-bat'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character top={-40} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（黒猫）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterBlackCat = OwnProps;\r\nexport const CharacterBlackCat: React.FC<CharacterBlackCat> = (props) => {\r\n  return (\r\n    <div\r\n      key={'blackcat' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-blackcat'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（黒猫）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterGhost = OwnProps;\r\nexport const CharacterGhost: React.FC<CharacterGhost> = (props) => {\r\n  return (\r\n    <div\r\n      key={'ghost' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-ghost'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={30} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（かぼちゃ）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterPumpkin = OwnProps;\r\nexport const CharacterPumpkin: React.FC<CharacterPumpkin> = (props) => {\r\n  return (\r\n    <div\r\n      key={'pumpkin' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-pumpkin'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character top={-15} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\nimport { Character } from '../common/Character';\r\n\r\n// --------------------------------------------\r\n// タイプ練習の文字（魔女）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  charcterState: string;\r\n\r\n  // 先頭文字\r\n  isHead: boolean;\r\n}\r\n\r\ntype CharacterWitch = OwnProps;\r\nexport const CharacterWitch: React.FC<CharacterWitch> = (props) => {\r\n  return (\r\n    <div\r\n      key={'witch' + props.componentId}\r\n      className={'kt-flex-vertical-center kt-font-white character-base character-witch'}\r\n      style={{ top: Math.round(props.top), left: Math.round(props.left) }}\r\n    >\r\n      <Character left={20} character={props.character}></Character>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../../../common/KidsTypingCommon.css';\r\nimport '../../../PracticePageForm.css';\r\n\r\nimport { CharacterState } from '../../../../../../store/reducers/TypingEngineReducer';\r\nimport { CharacterBat } from './CharacterBat';\r\nimport { CharacterBlackCat } from './CharacterBlackCat';\r\nimport { CharacterGhost } from './CharacterGhost';\r\nimport { CharacterPumpkin } from './CharacterPumpkin';\r\nimport { CharacterWitch } from './CharacterWitch';\r\n\r\n// --------------------------------------------\r\n// 練習ステージ（金魚）Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 入力文字ステータスリスト\r\n  characterStateList: CharacterState[];\r\n}\r\n\r\ntype PracticeStageHalloweenProps = OwnProps;\r\nexport const PracticeStageHalloween: React.FC<PracticeStageHalloweenProps> = (props) => {\r\n  const characters: any = [];\r\n  props.characterStateList.forEach((c, idx) => {\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n    if (c.practiceCharacterType === 'bat') {\r\n      characters.push(<CharacterBat {...componentAttr}></CharacterBat>);\r\n    } else if (c.practiceCharacterType === 'blackcat') {\r\n      characters.push(<CharacterBlackCat {...componentAttr}></CharacterBlackCat>);\r\n    } else if (c.practiceCharacterType === 'ghost') {\r\n      characters.push(<CharacterGhost {...componentAttr}></CharacterGhost>);\r\n    } else if (c.practiceCharacterType === 'pumpkin') {\r\n      characters.push(<CharacterPumpkin {...componentAttr}></CharacterPumpkin>);\r\n    } else if (c.practiceCharacterType === 'witch') {\r\n      characters.push(<CharacterWitch {...componentAttr}></CharacterWitch>);\r\n    }\r\n  });\r\n\r\n  return <div className='kt-floating-frame kt-flex-horizontal-left practice-stage-halloween-frame'>{characters}</div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../common/KidsTypingCommon.css';\r\nimport './PracticePageForm.css';\r\n\r\nimport { RemainingTime } from './presentations/header/RemainingTime';\r\nimport { SuccessCounter } from './presentations/header/SuccessCounter';\r\nimport { EffectLayer } from '../../effect-layer/EffectLayer';\r\nimport { PracticeStartAnimation } from './presentations/PracticeStartAnimation';\r\nimport { PracticeStageSakura } from './presentations/stages/sakura/StageSakura';\r\nimport { SoundEffect } from '../../common/SoundEffect';\r\nimport { BackgroundMusic } from '../../common/BackgroundMusic';\r\nimport { SoundResources } from '../../../SoundResources';\r\nimport { MissCounter } from './presentations/header/MissCounter';\r\nimport { PracticeEndAnimation } from './presentations/PracticeEndAnimation';\r\nimport { Keyboard } from './presentations/keyboard/Keyboard';\r\nimport { CharacterState, EffectorState } from '../../../store/reducers/TypingEngineReducer';\r\nimport { SoundStatus } from '../../../store/reducers/SoundReducer';\r\nimport { PracticeStageType } from '../../../store/actions/TypingEngineAction';\r\nimport { PracticeStageSunflower } from './presentations/stages/sunflower/StageSunflower';\r\nimport { PracticeStageGoldfish } from './presentations/stages/goldfish/StageGoldfish';\r\nimport { PracticeStageSeabed } from './presentations/stages/seabed/StageSeabed';\r\nimport { PracticeStageHalloween } from './presentations/stages/helloween/StageHalloween';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\n// --------------------------------------------\r\n// 練習ページコンテナから受け取るパラメータの定義\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // --------------------------------------------\r\n  // 表示用のパラメータ\r\n  // --------------------------------------------\r\n\r\n  // 正解カウンター\r\n  successCounter: number;\r\n\r\n  // 失敗カウンター\r\n  missCounter: number;\r\n\r\n  // 残り時間\r\n  remainingTime: number;\r\n\r\n  // 有効キー\r\n  enabledKeys: string[];\r\n\r\n  // 押下中のキー\r\n  downedKeys: string[];\r\n\r\n  // 練習ステージ種別\r\n  practiceStageType: PracticeStageType;\r\n\r\n  // 練習レベル\r\n  practiceLevel: number;\r\n\r\n  // 練習完了フラグ\r\n  practiceCompleted: boolean;\r\n\r\n  // 発射された「文字」の状態\r\n  characterStateList: CharacterState[];\r\n\r\n  // 画面の効果（アニメーション）状態\r\n  effectorStateList: EffectorState[];\r\n\r\n  // 現在ステージのBGM\r\n  currentBgmUrl: string;\r\n\r\n  // BGMの状態\r\n  bgmStatus: SoundStatus;\r\n\r\n  // 効果音の状態リスト\r\n  soundEffectList: SoundStatus[];\r\n\r\n  // ミュート状態\r\n  soundMuting: boolean;\r\n\r\n  // --------------------------------------------\r\n  // 状態更新関数\r\n  // --------------------------------------------\r\n\r\n  // ステージ初期化関数\r\n  initilizeStage: Function;\r\n\r\n  // 練習開始アニメーション終了イベントハンドラー\r\n  startAnimationEnd: Function;\r\n\r\n  // 練習終了アニメーション終了イベントハンドラー\r\n  endAnimationEnd: Function;\r\n\r\n  // BGM開始関数\r\n  playingBgm: Function;\r\n\r\n  // BGM停止関数\r\n  stoppedBgm: Function;\r\n\r\n  // 効果音鳴動関数\r\n  playingSoundEffect: Function;\r\n\r\n  // 効果音停止関数\r\n  stoppedSoundEffect: Function;\r\n\r\n  // キーダウンイベントハンドラー\r\n  keyDown: Function;\r\n\r\n  // キーアップイベントハンドラー\r\n  keyUp: Function;\r\n}\r\n\r\n// パラメータの型定義\r\ntype Props = OwnProps & RouteComponentProps<{ soundMuting: string }>;\r\n\r\n// --------------------------------------------\r\n// 練習ページのForm Component\r\n// --------------------------------------------\r\nexport class PracticePageForm extends React.Component<Props> {\r\n  // --------------------------------------------\r\n  // 処理を一度だけ実施するためのフラグ\r\n  // --------------------------------------------\r\n\r\n  // 練習BGM開始フラグ\r\n  playingStartBgm = false;\r\n\r\n  // 練習終了カウントダウン効果音開始フラグ\r\n  playingCountdownSe = false;\r\n\r\n  // 練習結果効果音開始フラグ\r\n  playingResultSe = false;\r\n\r\n  // 練習終了BGM開始フラグ\r\n  playingStageEndBgm = false;\r\n\r\n  // --------------------------------------------\r\n  // 練習ページrender\r\n  // --------------------------------------------\r\n  render() {\r\n    const cls = {\r\n      pageBackground: 'kt-box-fit practice-page-background',\r\n      outerFrame: 'kt-box-fit practice-page-outer-frame',\r\n      innerFrame: 'kt-floating-frame kt-flex-vertical-left practice-page-inner-frame',\r\n      headerFrame: 'kt-floating-frame header-frame',\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* 練習画面の背景画像 */}\r\n        <div className={cls.pageBackground}></div>\r\n\r\n        {/* 練習画面の背景（枠の外側・画面全体） */}\r\n        <div className={cls.outerFrame}>\r\n          {/* 練習画面（枠の中・練習画面） */}\r\n          <div className={cls.innerFrame}>\r\n            {/* 画面ヘッダー */}\r\n            <div className={cls.headerFrame}>\r\n              {/* 正解カウンター */}\r\n              <SuccessCounter successCount={this.props.successCounter}></SuccessCounter>\r\n\r\n              {/* 残り時間 */}\r\n              <RemainingTime remainingTime={this.props.remainingTime}></RemainingTime>\r\n\r\n              {/* 失敗カウンター */}\r\n              <MissCounter missCount={this.props.missCounter}></MissCounter>\r\n            </div>\r\n\r\n            {/* 練習ステージ全体 */}\r\n            <div style={{ position: 'relative' }}>\r\n              {/* 練習ステージ */}\r\n              {this.props.practiceStageType === 'sakura' ? (\r\n                <PracticeStageSakura characterStateList={this.props.characterStateList}></PracticeStageSakura>\r\n              ) : this.props.practiceStageType === 'sunflower' ? (\r\n                <PracticeStageSunflower characterStateList={this.props.characterStateList}></PracticeStageSunflower>\r\n              ) : this.props.practiceStageType === 'goldfish' ? (\r\n                <PracticeStageGoldfish characterStateList={this.props.characterStateList}></PracticeStageGoldfish>\r\n              ) : this.props.practiceStageType === 'seabed' ? (\r\n                <PracticeStageSeabed characterStateList={this.props.characterStateList}></PracticeStageSeabed>\r\n              ) : this.props.practiceStageType === 'halloween' ? (\r\n                <PracticeStageHalloween characterStateList={this.props.characterStateList}></PracticeStageHalloween>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              {/* 練習開始アニメーション*/}\r\n              <PracticeStartAnimation animationEnd={this.onAnimationEnd.bind(this)}></PracticeStartAnimation>\r\n\r\n              {/* 練習終了アニメーション*/}\r\n              {this.props.remainingTime === 0 ? (\r\n                <PracticeEndAnimation\r\n                  levelUp={this.props.missCounter < 3 ? true : false}\r\n                  animationEnd={this.props.endAnimationEnd}\r\n                  practiceCompleted={this.props.practiceCompleted}\r\n                ></PracticeEndAnimation>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              {/* 練習ステージに重ねて表示するアニメーションレイヤー */}\r\n              <EffectLayer characterStateList={this.props.characterStateList} effectStateList={this.props.effectorStateList}></EffectLayer>\r\n            </div>\r\n\r\n            {/* キーボード */}\r\n            <div>\r\n              <Keyboard\r\n                onKeyDown={(e: KeyboardEvent) => this.props.keyDown(e.key)}\r\n                onKeyUp={(e: KeyboardEvent) => this.props.keyUp(e.key)}\r\n                enabledKeys={this.props.enabledKeys}\r\n                downKeys={this.props.downedKeys}\r\n              ></Keyboard>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* BGM */}\r\n        <div>\r\n          <BackgroundMusic bgmStatus={this.props.bgmStatus} soundMuting={this.props.soundMuting}></BackgroundMusic>\r\n        </div>\r\n        {/* 効果音 */}\r\n        <div>\r\n          <SoundEffect soundEffectList={this.props.soundEffectList} soundMuting={this.props.soundMuting}></SoundEffect>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * コンポーネントがDOMツリーに追加された後一度だけ呼ばれるメソッド\r\n   * ステージの初期化を実施する\r\n   */\r\n  componentDidMount() {\r\n    this.props.initilizeStage();\r\n  }\r\n\r\n  /**\r\n   * コンポーネントの状態が更新される毎に呼ばれるメソッド\r\n   */\r\n  componentDidUpdate() {\r\n    // 練習開始時にBGMを開始して、練習開始効果音を鳴らす\r\n    if (!this.playingStartBgm) {\r\n      this.playingStartBgm = true;\r\n\r\n      // BGM開始\r\n      this.props.playingBgm(this.props.currentBgmUrl);\r\n\r\n      // 練習開始から３秒後に「レディー」を再生して、更に２秒後に「ゴー」を再生する（画面は５秒からカウントダウンしている）\r\n      setTimeout(\r\n        () => {\r\n          this.props.playingSoundEffect(SoundResources.seVoiceReady);\r\n          setTimeout(\r\n            () => {\r\n              this.props.playingSoundEffect(SoundResources.seVoiceGo);\r\n            },\r\n            2000,\r\n            this\r\n          );\r\n        },\r\n        3000,\r\n        this\r\n      );\r\n    }\r\n\r\n    // 練習終了３秒前に「カウントダウン」効果音を再生\r\n    if (this.props.remainingTime === 3 && !this.playingCountdownSe) {\r\n      this.props.playingSoundEffect(SoundResources.seVoiceCountDown);\r\n      this.playingCountdownSe = true;\r\n    }\r\n\r\n    // 練習終了時に「終了」効果音を再生\r\n    if (this.props.remainingTime === 0 && !this.playingStageEndBgm) {\r\n      this.props.playingBgm(SoundResources.bgmStageEnd);\r\n      this.playingStageEndBgm = true;\r\n    }\r\n\r\n    // 練習終了時に「レベルアップ」または「残念」効果音を再生\r\n    if (this.props.remainingTime === 0 && !this.playingResultSe) {\r\n      // 失敗回数が２回以下ならレベルアップ、３回以上ならレベル保留\r\n      if (this.props.missCounter < 3) {\r\n        setTimeout(() => this.props.playingSoundEffect(SoundResources.seVoiceGoodJob), 9000, this);\r\n      } else {\r\n        setTimeout(() => this.props.playingSoundEffect(SoundResources.seVoicePity), 9000, this);\r\n      }\r\n      this.playingResultSe = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 練習開始アニメーションの終了イベントハンドラー\r\n   */\r\n  onAnimationEnd() {\r\n    // 練習開始アニメーションの終了を親に通知\r\n    this.props.startAnimationEnd();\r\n  }\r\n}\r\n","\r\n// --------------------------------------------\r\n// キータイプエンジン Action\r\n// --------------------------------------------\r\nimport { actionCreatorFactory } from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nexport const TypingEngineActions = {\r\n  // ステージ選択\r\n  SELECTED_PRACTICE_STAGE: actionCreator<{ stageType: PracticeStageType }> ('SET_PRACTICE_STAGE'),\r\n\r\n  // ステージで利用する文字種別を設定\r\n  SELECTED_CHARACTER_TYPE: actionCreator<{ characterTypes: PracticeCharacterType[] }> ('SELECTED_CHARACTER_TYPE'),\r\n\r\n  // エンジンリセット\r\n  RESET_ENGINE: actionCreator('RESET_ENGINE'),\r\n\r\n  // 練習開始\r\n  START_PRACTICE: actionCreator<{ startTime: number }>('START_PRACTICE'),\r\n\r\n  // 文字発射\r\n  FIRE_CHARACTER: actionCreator<{ character: string }>('FIRE_CHARACTER'),\r\n\r\n  // キー入力\r\n  INPUT_CHARACTER: actionCreator<{ character: string }>('INPUT_CHARACTER'),\r\n\r\n  // 時間経過\r\n  TICK: actionCreator('TICK'),\r\n};\r\n\r\n// --------------------------------------------\r\n// 練習ステージの種別\r\n// --------------------------------------------\r\nconst practiceStageTypes = {\r\n  sakura: '1',\r\n  sunflower: '2',\r\n  goldfish: '3',\r\n  seabed: '4',\r\n  halloween: '5',\r\n} as const;\r\nexport type PracticeStageType = keyof typeof practiceStageTypes;\r\n\r\n// --------------------------------------------\r\n// 「文字」の種別\r\n// --------------------------------------------\r\nconst characterTypes = {\r\n  bird: '1',\r\n  sakura: '2',\r\n  dragonfly: '3',\r\n  ladybird: '4',\r\n  goldfish: '5',\r\n  blackfish: '6',\r\n  catfish: '7',\r\n  turtle: '8',\r\n  octopus: '9',\r\n  blowfish: '10',\r\n  shark: '11',\r\n  bat: '12',\r\n  blackcat: '13',\r\n  ghost: '14',\r\n  pumpkin: '15',\r\n  witch: '16',\r\n} as const;\r\nexport type PracticeCharacterType = keyof typeof characterTypes;\r\n\r\n","import { actionCreatorFactory } from 'typescript-fsa';\r\n\r\n// --------------------------------------------\r\n// タイトル画面 Action\r\n// --------------------------------------------\r\nconst actionCreator = actionCreatorFactory();\r\nexport const TitleActions = {\r\n  // 練習レベルロード\r\n  LOAD_PRACTICE_LEVEL: actionCreator('LOAD_PRACTICE_LEVEL'),\r\n\r\n  // 練習レベル更新\r\n  UPDATE_PRACTICE_LEVEL: actionCreator('UPDATE_PRACTICE_LEVEL'),\r\n\r\n  // 練習レベル選択\r\n  SELECT_PRACTICE_LEVEL: actionCreator<{ level: number }>('SELECT_PRACTICE_LEVEL'),\r\n\r\n  // 練習レベルアップ（レベルを１加算する）\r\n  PRACTICE_LEVEL_UP: actionCreator('PRACTICE_LEVEL_UP'),\r\n\r\n  // 練習レベルリセット\r\n  RESET_PRACTICE_LEVEL: actionCreator('RESET_PRACTICE_LEVEL'),\r\n\r\n  // ダイアログを表示\r\n  OPEN_DIALOG: actionCreator('OPEN_DIALOG'),\r\n\r\n  // ダイアログを閉じる\r\n  CLOSE_DIALOG: actionCreator('CLOSE_DIALOG'),\r\n};\r\n","import { actionCreatorFactory } from 'typescript-fsa';\r\n\r\n// --------------------------------------------\r\n// キーボード Action\r\n// --------------------------------------------\r\nconst actionCreator = actionCreatorFactory();\r\nexport const KeyboardActions = {\r\n  // リセットキーボード\r\n  RESET_KEYBOARD: actionCreator('RESET_KEYBOARD'),\r\n\r\n  // キー有効化\r\n  ENABLED_KEYS: actionCreator<{ keys: string[] }>('ENABLED_KEYS'),\r\n\r\n  // キーダウン\r\n  KEY_DOWN: actionCreator<{ key: string }>('KEY_DOWN'),\r\n\r\n  // キーアップ\r\n  KEY_UP: actionCreator<{ key: string }>('KEY_UP'),\r\n};\r\n","// --------------------------------------------\r\n// サウンド Action\r\n// --------------------------------------------\r\nimport { actionCreatorFactory } from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nexport const SoundActions = {\r\n  // BGM変更\r\n  CHANGED_BGM: actionCreator<{ bgmUrl: string }>('CHANGED_BGM'),\r\n\r\n  // BGM再生\r\n  PLAYING_BGM: actionCreator<{ bgmUrl: string }>('PLAY_BGM'),\r\n\r\n  // BGM停止\r\n  STOPPED_BGM: actionCreator('STOPPED_BGM'),\r\n\r\n  // 効果音再生\r\n  PLAYING_SOUND_EFFECT: actionCreator<{ soundUrl: string }>('PLAYING_SOUND_EFFECT'),\r\n\r\n  // 効果音停止\r\n  STOPPED_SOUND_EFFECT: actionCreator('STOPPED_SOUND_EFFECT'),\r\n\r\n  // ミュート\r\n  MUTE: actionCreator('MUTE'),\r\n\r\n  // ミュート解除\r\n  UNMUTE: actionCreator('UNMUTE'),\r\n};\r\n","// --------------------------------------------\r\n// 画面ヘッダー Action\r\n// --------------------------------------------\r\nimport { actionCreatorFactory } from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nexport const HeaderActions = {\r\n  // 正解カウンターリセット\r\n  RESET_SUCCESS_COUNTER: actionCreator('RESET_SUCCESS_COUNTER'),\r\n\r\n  // 正解カウンター加算\r\n  ADD_SUCCESS_COUNTER: actionCreator('ADD_SUCCESS_COUNTER'),\r\n\r\n  // 失敗カウンターリセット\r\n  RESET_MISS_COUNTER: actionCreator('RESET_MISS_COUNTER'),\r\n\r\n  // 失敗カウンター加算\r\n  ADD_MISS_COUNTER: actionCreator('ADD_MISS_COUNTER'),\r\n\r\n  // 残り時間更新\r\n  UPDATE_REMAINING_TIME: actionCreator<{ remainingTime: number }>('UPDATE_REMAINING_TIME'),\r\n};\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { HeaderActions } from '../actions/HeaderActions';\r\n\r\n// --------------------------------------------\r\n// Practiceヘッダーの状態\r\n// --------------------------------------------\r\nexport interface HeaderState {\r\n  // 正解カウンター\r\n  successCounter: number;\r\n\r\n  // 失敗カウンター\r\n  missCounter: number;\r\n\r\n  // 残り時間\r\n  remainingTime: number;\r\n}\r\n\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const headerInitialState: HeaderState = {\r\n  successCounter: 0,\r\n  missCounter: 0,\r\n  remainingTime: 60,\r\n};\r\n\r\n// --------------------------------------------\r\n// Practiceヘッダー Reducer\r\n// --------------------------------------------\r\nexport const headerReducer = reducerWithInitialState(headerInitialState)\r\n  // 正解カウンターリセット\r\n  .case(HeaderActions.RESET_SUCCESS_COUNTER, (state) => {\r\n    return {\r\n      ...state,\r\n      successCounter: 0,\r\n    };\r\n  })\r\n  // 正解カウンター加算\r\n  .case(HeaderActions.ADD_SUCCESS_COUNTER, (state) => {\r\n    return {\r\n      ...state,\r\n      successCounter: state.successCounter + 1,\r\n    };\r\n  })\r\n  // 失敗カウンターリセット\r\n  .case(HeaderActions.RESET_MISS_COUNTER, (state) => {\r\n    return {\r\n      ...state,\r\n      missCounter: 0,\r\n    };\r\n  })\r\n  // 失敗カウンター加算\r\n  .case(HeaderActions.ADD_MISS_COUNTER, (state) => {\r\n    return {\r\n      ...state,\r\n      missCounter: state.missCounter + 1,\r\n    };\r\n  })\r\n  // 残り時間更新\r\n  .case(HeaderActions.UPDATE_REMAINING_TIME, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      remainingTime: payload.remainingTime,\r\n    };\r\n  });\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { TitleActions } from '../actions/TitleAction';\r\n\r\n// --------------------------------------------\r\n// タイトル画面の状態\r\n// --------------------------------------------\r\nexport interface TitleState {\r\n  // 練習レベル\r\n  practiceLevel: number;\r\n\r\n  // 練習完了フラグ（true: 完了、false: まだ完了していない）\r\n  practiceCompleted: boolean;\r\n\r\n  // ダイアログの表示有無（true: 表示中、false: 非表示）\r\n  openedDialog: boolean;\r\n}\r\n\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const titleInitialState: TitleState = {\r\n  practiceLevel: 1,\r\n  practiceCompleted: false,\r\n  openedDialog: false,\r\n};\r\n\r\n// --------------------------------------------\r\n// 最大練習レベル\r\n// --------------------------------------------\r\nexport const MAX_PRACTICE_LEVEL = 20;\r\n\r\n// --------------------------------------------\r\n// タイトル画面Reducer\r\n// --------------------------------------------\r\nexport const titleReducer = reducerWithInitialState(titleInitialState)\r\n  // 練習レベルロード（ローカルストレージからのロード）\r\n  .case(TitleActions.LOAD_PRACTICE_LEVEL, (state) => {\r\n    const practiceLevelStr = window.localStorage.getItem('__kids-typing__practice-level');\r\n    var practiceLevel = 1;\r\n    if (null !== practiceLevelStr) {\r\n      practiceLevel = Number(practiceLevelStr);\r\n    } else {\r\n      window.localStorage.setItem('__kids-typing__practice-level', practiceLevel.toString());\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      practiceLevel: practiceLevel,\r\n      practiceCompleted: practiceLevel === MAX_PRACTICE_LEVEL\r\n    };\r\n  })\r\n\r\n  // 練習レベル更新（ローカルストレージの更新）\r\n  .case(TitleActions.UPDATE_PRACTICE_LEVEL, (state) => {\r\n    window.localStorage.setItem('__kids-typing__practice-level', state.practiceLevel.toString());\r\n    return {\r\n      ...state,\r\n    };\r\n  })\r\n\r\n  // 練習レベルアップ\r\n  .case(TitleActions.PRACTICE_LEVEL_UP, (state) => {\r\n    return {\r\n      ...state,\r\n      practiceLevel: state.practiceLevel + (state.practiceLevel < MAX_PRACTICE_LEVEL ? 1 : 0),\r\n      practiceCompleted: state.practiceLevel === (MAX_PRACTICE_LEVEL - 1)\r\n    };\r\n  })\r\n\r\n  // 練習レベルリセット\r\n  .case(TitleActions.RESET_PRACTICE_LEVEL, (state) => {\r\n    return {\r\n      ...state,\r\n      practiceLevel: 1,\r\n      practiceCompleted: false\r\n    };\r\n  })\r\n\r\n  // ダイアログ表示\r\n  .case(TitleActions.OPEN_DIALOG, (state) => {\r\n    return {\r\n      ...state,\r\n      openedDialog: true,\r\n    };\r\n  })\r\n\r\n  // ダイアログを閉じる\r\n  .case(TitleActions.CLOSE_DIALOG, (state) => {\r\n    return {\r\n      ...state,\r\n      openedDialog: false,\r\n    };\r\n  });\r\n","import { PracticeStageType, PracticeCharacterType } from './../actions/TypingEngineAction';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { TypingEngineActions } from '../actions/TypingEngineAction';\r\n\r\n// --------------------------------------------\r\n// キータイプエンジンの状態\r\n// --------------------------------------------\r\nexport interface TypingEngineState {\r\n  // ステージの種類\r\n  practiceStageType: PracticeStageType;\r\n\r\n  // ステージで利用する「文字」の種類\r\n  useCharacterTypes: PracticeCharacterType[];\r\n\r\n  // タイプ練習の「文字」状態リスト\r\n  characterStateList: CharacterState[];\r\n\r\n  // エフェクト状態リスト\r\n  effectorStateList: EffectorState[];\r\n\r\n  // 練習開始時間\r\n  practiceStartTime: number;\r\n\r\n  // 練習時間\r\n  practiceTime: number;\r\n\r\n  // コンポーネントIDシーケンス\r\n  componentIdSequence: number;\r\n\r\n  // エフェクトIDシーケンス\r\n  effectIdSequence: number;\r\n}\r\n\r\n// --------------------------------------------\r\n// タイプ練習の「文字」の状態\r\n// --------------------------------------------\r\nexport interface CharacterState {\r\n  // コンポーネントID\r\n  componentId: string;\r\n\r\n  // 文字の種別\r\n  practiceCharacterType: PracticeCharacterType;\r\n\r\n  // 文字\r\n  character: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 加速度（x方向）\r\n  XAcceleration: number;\r\n\r\n  // 加速度（y方向）\r\n  YAcceleration: number;\r\n\r\n  // 文字の状態（init: 初期表示中、disp: 表示中、terminate: 消去中）\r\n  characterState: string;\r\n}\r\n\r\n// --------------------------------------------\r\n// エフェクトの状態\r\n// --------------------------------------------\r\nexport interface EffectorState {\r\n  // コンポーネントID\r\n  effectId: string;\r\n\r\n  // エフェクト種別\r\n  effectType: string;\r\n\r\n  // 表示位置（top）\r\n  top: number;\r\n\r\n  // 表示位置（left）\r\n  left: number;\r\n\r\n  // 加速度（x方向）\r\n  XAcceleration: number;\r\n\r\n  // 加速度（y方向）\r\n  YAcceleration: number;\r\n\r\n  // エフェクト開始時間\r\n  startTime: number;\r\n}\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const typingEngineInitialState: TypingEngineState = {\r\n  practiceStageType: 'sakura',\r\n  useCharacterTypes: [],\r\n  characterStateList: [],\r\n  effectorStateList: [],\r\n  practiceStartTime: 0,\r\n  practiceTime: 0,\r\n  componentIdSequence: 0,\r\n  effectIdSequence: 0,\r\n};\r\n\r\nexport const typingEngineReducer = reducerWithInitialState(typingEngineInitialState)\r\n  // ステージ設定\r\n  .case(TypingEngineActions.SELECTED_PRACTICE_STAGE, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      practiceStageType: payload.stageType,\r\n    };\r\n  })\r\n  // ステージで利用する文字種別設定\r\n  .case(TypingEngineActions.SELECTED_CHARACTER_TYPE, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      useCharacterTypes: payload.characterTypes,\r\n    };\r\n  })\r\n  // エンジンリセット\r\n  .case(TypingEngineActions.RESET_ENGINE, (state) => {\r\n    return {\r\n      ...state,\r\n      characterStateList: [],\r\n      effectorStateList: [],\r\n      practiceStartTime: 0,\r\n      practiceTime: 0,\r\n    };\r\n  })\r\n  // 練習開始\r\n  .case(TypingEngineActions.START_PRACTICE, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      practiceStartTime: new Date().getTime(),\r\n      practiceTime: payload.startTime,\r\n    };\r\n  })\r\n  // 文字発射\r\n  .case(TypingEngineActions.FIRE_CHARACTER, (state, payload) => {\r\n    // 文字をランダムに選択する\r\n    var characterType = state.useCharacterTypes[Math.floor(Math.random() * state.useCharacterTypes.length)];\r\n\r\n    // サメは一匹だけしか出さない\r\n    const hasShake = state.characterStateList.filter((c) => c.practiceCharacterType === 'shark');\r\n    while (hasShake.length > 0 && characterType === 'shark') {\r\n      characterType = state.useCharacterTypes[Math.floor(Math.random() * state.useCharacterTypes.length)];\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      characterStateList: Array.from(state.characterStateList).concat({\r\n        componentId: (state.componentIdSequence + 1).toString(),\r\n        practiceCharacterType: characterType,\r\n        character: payload.character,\r\n        top: characterType === 'shark' ? 400 : characterType === 'blackcat' ? 430 : 100 + Math.round(Math.random() * 100),\r\n        left: 900,\r\n        XAcceleration: -2,\r\n        YAcceleration: 0,\r\n        characterState: 'init',\r\n      }),\r\n      componentIdSequence: state.componentIdSequence + 1,\r\n    };\r\n  })\r\n  // キー入力\r\n  // 入力された文字が「入力する文字」の先頭文字と同じであれば、「入力する文字」の先頭を削除する\r\n  .case(TypingEngineActions.INPUT_CHARACTER, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      characterStateList:\r\n        state.characterStateList.length > 0 && state.characterStateList[0].character === payload.character\r\n          ? state.characterStateList.slice(1)\r\n          : state.characterStateList,\r\n\r\n      effectorStateList:\r\n        state.characterStateList.length > 0\r\n          ? state.characterStateList[0].character === payload.character\r\n            ? Array.from(state.effectorStateList).concat([\r\n                {\r\n                  effectId: (state.effectIdSequence + 1).toString(),\r\n                  effectType: 'InputSuccess',\r\n                  top: state.characterStateList[0].top,\r\n                  left: state.characterStateList[0].left,\r\n                  XAcceleration: state.characterStateList[0].XAcceleration,\r\n                  YAcceleration: state.characterStateList[0].YAcceleration,\r\n                  startTime: new Date().getTime(),\r\n                },\r\n              ])\r\n            : Array.from(state.effectorStateList).concat([\r\n                {\r\n                  effectId: (state.effectIdSequence + 1).toString(),\r\n                  effectType: 'InputMiss',\r\n                  top: state.characterStateList[0].top,\r\n                  left: state.characterStateList[0].left,\r\n                  XAcceleration: state.characterStateList[0].XAcceleration,\r\n                  YAcceleration: state.characterStateList[0].YAcceleration,\r\n                  startTime: new Date().getTime(),\r\n                },\r\n              ])\r\n          : state.effectorStateList,\r\n\r\n      effectIdSequence: state.characterStateList.length > 0 ? state.effectIdSequence + 1 : state.effectIdSequence,\r\n    };\r\n  })\r\n\r\n  // 時間を進める\r\n  .case(TypingEngineActions.TICK, (state) => {\r\n    const nowTime = new Date().getTime();\r\n    return {\r\n      ...state,\r\n      characterStateList: Array.from(state.characterStateList)\r\n        .filter((c) => c.characterState !== 'terminate')\r\n        .filter((c) => c.left >= -100)\r\n        .map((c) => ({\r\n          ...c,\r\n          // 文字の位置を算出する（縦方向）\r\n          top: tickCharacterTop(c.practiceCharacterType, c.top, c.YAcceleration),\r\n          // 文字の位置を算出する（横方向）\r\n          left: tickCharacterLeft(c.practiceCharacterType, c.left, c.XAcceleration),\r\n          // 文字の速度を算出する（縦方向）\r\n          YAcceleration: tickCharacterYAcceleration(c.practiceCharacterType, c.top, c.YAcceleration),\r\n          // 文字の速度を算出する（横方向）\r\n          XAcceleration: tickCharacterXAcceleration(c.practiceCharacterType, c.left, c.XAcceleration),\r\n        })),\r\n\r\n      effectorStateList:\r\n        state.effectorStateList.findIndex((ef) => nowTime - ef.startTime >= 5000) !== -1\r\n          ? Array.from(state.effectorStateList).filter((ef) => nowTime - ef.startTime < 5000)\r\n          : state.effectorStateList,\r\n    };\r\n  });\r\n\r\n// --------------------------------------------\r\n// 文字の位置算出関数\r\n// --------------------------------------------\r\n\r\n/**\r\n * 文字の位置を算出する（縦方向に移動する）\r\n * @param characterType 文字の種別\r\n * @param top 現在の位置\r\n * @param yAcceleration 縦方向の移動速度\r\n */\r\nfunction tickCharacterTop(characterType: PracticeCharacterType, top: number, yAcceleration: number): number {\r\n  switch (characterType) {\r\n    case 'sakura':\r\n    case 'bird':\r\n    case 'dragonfly':\r\n    case 'ladybird':\r\n    case 'goldfish':\r\n    case 'catfish':\r\n    case 'blackfish':\r\n    case 'turtle':\r\n    case 'octopus':\r\n    case 'blowfish':\r\n    case 'bat':\r\n    case 'ghost':\r\n    case 'pumpkin':\r\n    case 'witch':\r\n      // ０～４００の間を超えないようにする\r\n      return Math.max(Math.min(Math.round(top + yAcceleration), 400), 0);\r\n    case 'shark':\r\n    case 'blackcat':\r\n      return top;\r\n  }\r\n}\r\n\r\n/**\r\n * 文字の位置を算出する（横方向に移動する）\r\n * @param characterType 文字の種別\r\n * @param left 現在の位置\r\n * @param xAcceleration 横方向の移動速度\r\n */\r\nfunction tickCharacterLeft(characterType: PracticeCharacterType, left: number, xAcceleration: number): number {\r\n  switch (characterType) {\r\n    case 'sakura':\r\n    case 'bird':\r\n    case 'dragonfly':\r\n    case 'ladybird':\r\n    case 'goldfish':\r\n    case 'blackfish':\r\n    case 'catfish':\r\n    case 'turtle':\r\n    case 'octopus':\r\n    case 'blowfish':\r\n    case 'shark':\r\n    case 'bat':\r\n    case 'blackcat':\r\n    case 'ghost':\r\n    case 'pumpkin':\r\n    case 'witch':\r\n  }\r\n  return Math.round(left + xAcceleration);\r\n}\r\n\r\n/**\r\n * 文字の縦方向の移動速度を算出する\r\n * @param characterType 文字の種別\r\n * @param characterState 文字の状態\r\n * @param top 現在の位置\r\n * @param yAcceleration 現在の移動速度\r\n */\r\nfunction tickCharacterYAcceleration(characterType: PracticeCharacterType, top: number, yAcceleration: number): number {\r\n  switch (characterType) {\r\n    case 'sakura':\r\n    case 'goldfish':\r\n    case 'blackfish':\r\n    case 'catfish':\r\n    case 'turtle':\r\n    case 'blowfish':\r\n    case 'witch':\r\n      // ランダム上下するが突然向きが逆転しないように制御する\r\n      var acc1 = yAcceleration + (0.5 - Math.random() * 1);\r\n      if (acc1 > 1.0) {\r\n        acc1 = 1.0;\r\n      }\r\n      if (acc1 < -0.5) {\r\n        acc1 = -0.5;\r\n      }\r\n      return acc1;\r\n\r\n    case 'bird':\r\n    case 'dragonfly':\r\n    case 'ladybird':\r\n    case 'pumpkin':\r\n      // ランダム上下する\r\n      return 2 - Math.random() * 4;\r\n\r\n    case 'octopus':\r\n    case 'bat':\r\n    case 'ghost':\r\n      // 激しくランダムに上下するが突然向きが逆転しないように制御する\r\n      var acc2 = yAcceleration + (0.5 - Math.random() * 1);\r\n      if (acc2 > 2.0) {\r\n        acc2 = 2.0;\r\n      }\r\n      if (acc2 < -1.0) {\r\n        acc2 = -1.0;\r\n      }\r\n      return acc2;\r\n\r\n    case 'shark':\r\n    case 'blackcat':\r\n      // 上下には移動しない\r\n      return 0;\r\n  }\r\n  return 1;\r\n}\r\n\r\n/**\r\n * 文字の横方向の移動速度を算出する\r\n * @param characterType 文字の種別\r\n * @param characterState 文字の状態\r\n * @param left 現在の位置\r\n * @param xAcceleration 現在の移動速度\r\n */\r\nfunction tickCharacterXAcceleration(characterType: PracticeCharacterType, left: number, xAcceleration: number): number {\r\n  return -2;\r\n}\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { KeyboardActions } from '../actions/KeyboardActions';\r\n\r\n// --------------------------------------------\r\n// キーボード の状態\r\n// --------------------------------------------\r\nexport interface KeyboardState {\r\n  // 有効化キー\r\n  enabledKeys: string[];\r\n\r\n  // 押下中キー\r\n  downedKeys: string[];\r\n}\r\n\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const keyboardInitialState: KeyboardState = {\r\n  enabledKeys: [],\r\n  downedKeys: [],\r\n};\r\n\r\n// --------------------------------------------\r\n// キーボード Reducer\r\n// --------------------------------------------\r\nexport const keyboardReducer = reducerWithInitialState(keyboardInitialState)\r\n  // キー有効化\r\n  .case(KeyboardActions.ENABLED_KEYS, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      enabledKeys: payload.keys,\r\n    };\r\n  })\r\n  // キーダウン\r\n  .case(KeyboardActions.KEY_DOWN, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      downedKeys: Array.from(state.downedKeys).concat(payload.key),\r\n    };\r\n  })\r\n  // キーアップ\r\n  .case(KeyboardActions.KEY_UP, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      downedKeys: Array.from(state.downedKeys).filter((key) => key !== payload.key),\r\n    };\r\n  });\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { SoundActions } from '../actions/SoundActions';\r\n\r\n// --------------------------------------------\r\n// サウンドの状態\r\n// --------------------------------------------\r\nexport interface SoundState {\r\n  // 現在のBGM\r\n  currentBgmUrl: string;\r\n\r\n  // BGM再生ステータス\r\n  bgmStatus: SoundStatus;\r\n\r\n  // 効果音リスト\r\n  soundEffectList: SoundStatus[];\r\n\r\n  // サウンドエフェクトIDシーケンス\r\n  soundEffectIdSequence: number;\r\n\r\n  // ミュート（true: ミュート中、false: ミュート解除中）\r\n  soundMuting: boolean;\r\n}\r\n\r\n// --------------------------------------------\r\n// 効果音の状態\r\n// --------------------------------------------\r\nexport interface SoundStatus {\r\n  // サウンドエフェクトID\r\n  soundEffectId: string;\r\n\r\n  // 再生状態\r\n  soundStatus: 'PLAYING' | 'STOPPED' | 'PAUSED';\r\n\r\n  // 再生サウンドURL\r\n  url: string;\r\n\r\n  // 再生開始時間\r\n  playStartTime: number;\r\n}\r\n\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const soundInitialState: SoundState = {\r\n  currentBgmUrl: '',\r\n  bgmStatus: {\r\n    soundEffectId: '',\r\n    soundStatus: 'STOPPED',\r\n    url: '',\r\n    playStartTime: 0,\r\n  },\r\n  soundEffectList: [],\r\n  soundEffectIdSequence: 0,\r\n  soundMuting: true,\r\n};\r\n\r\n// --------------------------------------------\r\n// サウンド Reducer\r\n// --------------------------------------------\r\nexport const soundReducer = reducerWithInitialState(soundInitialState)\r\n  // BGN変更\r\n  .case(SoundActions.CHANGED_BGM, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      currentBgmUrl: payload.bgmUrl,\r\n    };\r\n  })\r\n\r\n  // BGN再生\r\n  .case(SoundActions.PLAYING_BGM, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      bgmStatus: {\r\n        soundEffectId: 'bgm',\r\n        soundStatus: 'PLAYING',\r\n        url: payload.bgmUrl,\r\n        playStartTime: new Date().getTime(),\r\n      },\r\n    };\r\n  })\r\n\r\n  // BGN停止\r\n  .case(SoundActions.STOPPED_BGM, (state) => {\r\n    return {\r\n      ...state,\r\n      bgmStatus: {\r\n        ...state.bgmStatus,\r\n        soundStatus: 'STOPPED',\r\n      },\r\n    };\r\n  })\r\n\r\n  // 効果音再生\r\n  .case(SoundActions.PLAYING_SOUND_EFFECT, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      soundEffectList: Array.from(state.soundEffectList).concat({\r\n        soundEffectId: (state.soundEffectIdSequence + 1).toString(),\r\n        soundStatus: 'PLAYING',\r\n        url: payload.soundUrl,\r\n        playStartTime: new Date().getTime(),\r\n      }),\r\n      soundEffectIdSequence: state.soundEffectIdSequence + 1,\r\n    };\r\n  })\r\n\r\n  // 効果音停止\r\n  .case(SoundActions.STOPPED_SOUND_EFFECT, (state, payload) => {\r\n    return {\r\n      ...state,\r\n      soundEffectList: [],\r\n    };\r\n  })\r\n\r\n  // ミュート\r\n  .case(SoundActions.MUTE, (state) => {\r\n    return {\r\n      ...state,\r\n      soundMuting: true,\r\n    };\r\n  })\r\n\r\n  // ミュート解除\r\n  .case(SoundActions.UNMUTE, (state) => {\r\n    return {\r\n      ...state,\r\n      soundMuting: false,\r\n    };\r\n  });\r\n","import { actionCreatorFactory } from 'typescript-fsa';\r\n\r\n// --------------------------------------------\r\n// エンディング画面 Action\r\n// --------------------------------------------\r\nconst actionCreator = actionCreatorFactory();\r\nexport const EndingActions = {\r\n  // エンディングフェードアウト\r\n  FADE_OUT_ENDING: actionCreator('FADE_OUT_ENDING'),\r\n};\r\n","import { EndingActions } from './../actions/EndingAction';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\n// --------------------------------------------\r\n// エンディング画面の状態\r\n// --------------------------------------------\r\nexport interface EndingState {\r\n  // フェードアウトフラグ\r\n  fadeOut: boolean;\r\n}\r\n\r\n// --------------------------------------------\r\n// 初期状態\r\n// --------------------------------------------\r\nexport const endingInitialState: EndingState = {\r\n  fadeOut: false,\r\n};\r\n\r\n// --------------------------------------------\r\n// エンディング画面Reducer\r\n// --------------------------------------------\r\nexport const endingReducer = reducerWithInitialState(endingInitialState)\r\n  // フェードアウト\r\n  .case(EndingActions.FADE_OUT_ENDING, (state) => {\r\n    return {\r\n      ...state,\r\n      fadeOut: true,\r\n    };\r\n  });\r\n","\r\nimport thunk from 'redux-thunk';\r\nimport { HeaderState, headerReducer } from './reducers/HeaderReducer';\r\nimport { TitleState, titleReducer } from './reducers/TitleReducer';\r\nimport { TypingEngineState, typingEngineReducer } from './reducers/TypingEngineReducer';\r\nimport { KeyboardState, keyboardReducer } from './reducers/KeyboardReducer';\r\nimport { SoundState, soundReducer } from './reducers/SoundReducer';\r\nimport { compose, createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { endingReducer, EndingState } from './reducers/EndingReducer';\r\n\r\nexport type AppState = {\r\n  titleState: TitleState;\r\n  endingState: EndingState;\r\n  typingEngineState: TypingEngineState;\r\n  headerState: HeaderState;\r\n  keyboardState: KeyboardState;\r\n  soundState: SoundState;\r\n};\r\n\r\nconst storeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers<AppState>({\r\n    titleState: titleReducer,\r\n    endingState: endingReducer,\r\n    typingEngineState: typingEngineReducer,\r\n    headerState: headerReducer,\r\n    keyboardState: keyboardReducer,\r\n    soundState: soundReducer,\r\n  }),\r\n  storeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { PracticeStageType, PracticeCharacterType } from './../store/actions/TypingEngineAction';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { PracticePageForm } from '../components/pages/practice-page/PracticePageForm';\r\nimport { TypingEngineActions } from '../store/actions/TypingEngineAction';\r\nimport { TitleActions } from '../store/actions/TitleAction';\r\nimport { KeyboardActions } from '../store/actions/KeyboardActions';\r\nimport { SoundActions } from '../store/actions/SoundActions';\r\nimport { HeaderActions } from '../store/actions/HeaderActions';\r\nimport { SoundResources } from '../SoundResources';\r\nimport store, { AppState } from '../store/KidsTypingStore';\r\nimport { MAX_PRACTICE_LEVEL } from '../store/reducers/TitleReducer';\r\n\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return {\r\n    // 正解カウンター\r\n    successCounter: appState.headerState.successCounter,\r\n\r\n    // 失敗カウンター\r\n    missCounter: appState.headerState.missCounter,\r\n\r\n    // 残り時間\r\n    remainingTime: appState.headerState.remainingTime,\r\n\r\n    // 練習ステージの種別\r\n    practiceStageType: appState.typingEngineState.practiceStageType,\r\n\r\n    // タイプ練習の「文字」状態リスト\r\n    characterStateList: appState.typingEngineState.characterStateList,\r\n\r\n    // エフェクト状態リスト\r\n    effectorStateList: appState.typingEngineState.effectorStateList,\r\n\r\n    // 有効化キー\r\n    enabledKeys: appState.keyboardState.enabledKeys,\r\n\r\n    // 押下中キー\r\n    downedKeys: appState.keyboardState.downedKeys,\r\n\r\n    // 現在のBGM\r\n    currentBgmUrl: appState.soundState.currentBgmUrl,\r\n\r\n    // BGM再生ステータス\r\n    bgmStatus: appState.soundState.bgmStatus,\r\n\r\n    // 効果音リスト\r\n    soundEffectList: appState.soundState.soundEffectList,\r\n\r\n    // ミュート\r\n    soundMuting: appState.soundState.soundMuting,\r\n\r\n    // 練習レベル\r\n    practiceLevel: appState.titleState.practiceLevel,\r\n\r\n    // 練習完了フラグ\r\n    practiceCompleted: appState.titleState.practiceCompleted,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    // 正解カウンターリセット\r\n    resetSuccessCounter: () => dispatch(HeaderActions.RESET_SUCCESS_COUNTER()),\r\n\r\n    // 正解カウンター加算\r\n    addSuccessCounter: () => dispatch(HeaderActions.ADD_SUCCESS_COUNTER()),\r\n\r\n    // 失敗カウンターリセット\r\n    resetMissCounter: () => dispatch(HeaderActions.RESET_MISS_COUNTER()),\r\n\r\n    // 失敗カウンター加算\r\n    addMissCounter: () => dispatch(HeaderActions.ADD_MISS_COUNTER()),\r\n\r\n    // キーボードリセット\r\n    resetKeyboard: () => dispatch(KeyboardActions.RESET_KEYBOARD()),\r\n\r\n    // キーダウン\r\n    keyDown: (key: string) => dispatch(KeyboardActions.KEY_DOWN({ key: key })),\r\n\r\n    // キーアップ\r\n    keyUp: (key: string) => dispatch(KeyboardActions.KEY_UP({ key: key })),\r\n\r\n    // ステージ設定\r\n    selectStage: (practiceStageType: PracticeStageType) => dispatch(TypingEngineActions.SELECTED_PRACTICE_STAGE({ stageType: practiceStageType })),\r\n\r\n    // ステージ初期化\r\n    initilizeStage: () => initializeStage(),\r\n\r\n    // 練習開始アニメーション終了時の処理\r\n    startAnimationEnd: () => startPractice(),\r\n\r\n    // 練習終了アニメーション終了時の処理\r\n    endAnimationEnd: () => endPractice(),\r\n\r\n    // BGM開始\r\n    playingBgm: (bgmUrl: string) => dispatch(SoundActions.PLAYING_BGM({ bgmUrl: bgmUrl })),\r\n\r\n    // BGM停止\r\n    stoppedBgm: () => dispatch(SoundActions.STOPPED_BGM()),\r\n\r\n    // 効果音鳴動\r\n    playingSoundEffect: (soundUrl: string) => dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: soundUrl })),\r\n\r\n    // 効果音停止\r\n    stoppedSoundEffect: () => dispatch(SoundActions.STOPPED_SOUND_EFFECT()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PracticePageForm);\r\n\r\n/**\r\n * ステージ初期化\r\n */\r\nfunction initializeStage(): void {\r\n  // 現在のレベルをもとにステージ定義を取得する\r\n  const stageConfig = getStageConfig(store.getState().titleState.practiceLevel);\r\n\r\n  // ステージ種別を選択する\r\n  store.dispatch(TypingEngineActions.SELECTED_PRACTICE_STAGE({stageType: stageConfig.stageType }));\r\n\r\n  // ステージで利用する文字種別を選択する\r\n  store.dispatch(TypingEngineActions.SELECTED_CHARACTER_TYPE({characterTypes: stageConfig.useCharacterTypes }));\r\n\r\n  // ステージ毎のBGMを設定する\r\n  store.dispatch(SoundActions.CHANGED_BGM({ bgmUrl: stageConfig.backgroundMusic }));\r\n\r\n  // キーボードに有効キーを設定する\r\n  store.dispatch(KeyboardActions.ENABLED_KEYS({ keys: Array.from(stageConfig.enabledKeys) }));\r\n\r\n  // キーダウンイベントハンドラーを登録\r\n  window.addEventListener('keydown', (e: KeyboardEvent) => {\r\n    store.dispatch(KeyboardActions.KEY_DOWN({ key: e.key.toLocaleUpperCase() }));\r\n  });\r\n\r\n  // キーアップイベントハンドラーを登録\r\n  window.addEventListener('keyup', (e: KeyboardEvent) => {\r\n    // 「文字」が画面に表示されていないときはミスカウンターを加算する\r\n    if (store.getState().typingEngineState.characterStateList.length === 0) {\r\n      store.dispatch(HeaderActions.ADD_MISS_COUNTER());\r\n      store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seMiss }));\r\n      return;\r\n    }\r\n\r\n    // 先頭の文字と押下されたキーが一致するか判定\r\n    if (store.getState().typingEngineState.characterStateList[0].character === e.key.toLocaleUpperCase()) {\r\n      // 一致した場合は正解カウンターを加算して成功効果音を鳴動する\r\n      store.dispatch(TypingEngineActions.INPUT_CHARACTER({ character: e.key.toLocaleUpperCase() }));\r\n      store.dispatch(HeaderActions.ADD_SUCCESS_COUNTER());\r\n      store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seSuccess }));\r\n    } else {\r\n      // 一致しない場合は失敗カウンターを加算して失敗効果音を鳴動する\r\n      store.dispatch(TypingEngineActions.INPUT_CHARACTER({ character: e.key.toLocaleUpperCase() }));\r\n      store.dispatch(HeaderActions.ADD_MISS_COUNTER());\r\n      store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seMiss }));\r\n    }\r\n\r\n    // 100ミリ秒後にキーボードのキーアップアクションをディスパッチする（キーを一定時間押下してからアップさせるための処理）\r\n    setTimeout(() => store.dispatch(KeyboardActions.KEY_UP({ key: e.key.toLocaleUpperCase() })), 100);\r\n  });\r\n}\r\n\r\n/**\r\n * 練習開始\r\n */\r\nvar intervalHandle: any = null;\r\nfunction startPractice(): void {\r\n  // 現在のレベルをもとにステージ定義を取得する\r\n  const stageConfig = getStageConfig(store.getState().titleState.practiceLevel);\r\n\r\n  // 現在のレベルの有効キーをもとに練習中に排出する「文字」の配列を作成する\r\n  const practiceCharacters = createPracticeCaracters(60, stageConfig.enabledKeys, stageConfig.importantKeys);\r\n\r\n  // 練習時間に60秒を設定して練習を開始する\r\n  store.dispatch(TypingEngineActions.START_PRACTICE({ startTime: 60 }));\r\n\r\n  // 練習メインループを開始する（FPS60）\r\n  const fps = 60;\r\n  intervalHandle = setInterval(main, 1000 / fps, fps, stageConfig.fireInterval, practiceCharacters);\r\n}\r\n\r\n/**\r\n * 練習終了\r\n */\r\nfunction endPractice(): void {\r\n\r\n  // レベル更新前のレベルを取得\r\n  const previousLevel = store.getState().titleState.practiceLevel;\r\n\r\n  // レベルアップ判定\r\n  if (!store.getState().titleState.practiceCompleted) {\r\n    if (store.getState().headerState.missCounter <= 3) {\r\n      // レベルアップ\r\n      store.dispatch(TitleActions.PRACTICE_LEVEL_UP());\r\n\r\n      // レベルアップ効果音鳴動\r\n      store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seVoiceGoodJob }));\r\n    } else {\r\n      // レベル保留残念効果音鳴動\r\n      store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seVoicePity }));\r\n    }\r\n  }\r\n\r\n  // 練習レベルをweb storageに保存する\r\n  store.dispatch(TitleActions.UPDATE_PRACTICE_LEVEL());\r\n\r\n  // 練習メインループ用のインターバルをクリア\r\n  clearInterval(intervalHandle);\r\n\r\n  // レベル２１になった場合はエンディングページに遷移する\r\n  if (store.getState().titleState.practiceCompleted && previousLevel === (MAX_PRACTICE_LEVEL - 1)) {\r\n    window.location.replace(process.env.PUBLIC_URL + '/ending/' + (store.getState().soundState.soundMuting ? 'true' : 'false'));\r\n    return;\r\n  }\r\n\r\n  // タイトル画面に遷移する\r\n  window.location.replace(process.env.PUBLIC_URL +'/title/' + (store.getState().soundState.soundMuting ? 'true' : 'false'));\r\n}\r\n\r\n/**\r\n * 練習画面のメインループ\r\n * 定期的に「文字」を発射して「文字」を移動させるために時間経過アクションをディスパッチする。\r\n * cntとfireCharaIndexを何とかしたい・・・\r\n */\r\nvar cnt = 0;\r\nvar fireCharaIndex = 0;\r\nfunction main(fps: number, fireInterval: number, practiceCharacter: string[]) {\r\n  // 残り時間が０になったときは何もしない\r\n  if (store.getState().headerState.remainingTime <= 0) {\r\n    return;\r\n  }\r\n\r\n  // 残り時間を算出する\r\n  const remainingTime =\r\n    store.getState().typingEngineState.practiceTime -\r\n    Math.round((new Date().getTime() - store.getState().typingEngineState.practiceStartTime) / 1000);\r\n\r\n  // ヘッダの残り時間を更新する\r\n  store.dispatch(HeaderActions.UPDATE_REMAINING_TIME({ remainingTime: remainingTime }));\r\n\r\n  // 時間を進める\r\n  store.dispatch(TypingEngineActions.TICK());\r\n\r\n  // 入力が間に合わなかった「文字」に対して入力失敗を発生させる\r\n  if (store.getState().typingEngineState.characterStateList.length > 0 && store.getState().typingEngineState.characterStateList[0].left <= -100) {\r\n    console.log(store.getState().typingEngineState.characterStateList[0].left);\r\n    store.dispatch(TypingEngineActions.INPUT_CHARACTER({ character: '' }));\r\n    store.dispatch(HeaderActions.ADD_MISS_COUNTER());\r\n    store.dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: SoundResources.seMiss }));\r\n  }\r\n\r\n  // 「文字」出力間隔に達した場合は「文字」を出力する\r\n  if (cnt * (1000 / fps) > fireInterval) {\r\n    store.dispatch(\r\n      TypingEngineActions.FIRE_CHARACTER({\r\n        // 練習終了アニメーションなどにより練習が長くなる可能性があるので最後の文字を表示した後は最初に戻るようにする\r\n        character: practiceCharacter[fireCharaIndex % practiceCharacter.length],\r\n      })\r\n    );\r\n    cnt = 0;\r\n    fireCharaIndex++;\r\n  }\r\n  cnt++;\r\n}\r\n\r\n/**\r\n * 発射する「文字」の配列を作成する。\r\n * @param characterCount 作り出す配列の総数\r\n * @param sourceCharacter 配列に組み込む「文字」\r\n * @param importantCharacter 重点文字\r\n */\r\nfunction createPracticeCaracters(characterCount: number, sourceCharacter: string, importantCharacter: string): string[] {\r\n  // 総数に合わせて元「文字」を増やす（重点文字は出現回数を多くする）\r\n  var characters = '';\r\n  for (var i = 0; i < characterCount / sourceCharacter.length; i++) {\r\n    characters = characters + sourceCharacter + importantCharacter;\r\n  }\r\n\r\n  // 総数を超えた部分を削除する\r\n  const charactersArray = Array.from(characters.substr(0, characterCount));\r\n\r\n  // 文字配列をシャッフルする\r\n  for (i = 0; i < 100; i++) {\r\n    const idx1 = Math.round(Math.random() * (characterCount - 1));\r\n    const idx2 = Math.round(Math.random() * (characterCount - 1));\r\n    const chara1 = charactersArray[idx1];\r\n    const chara2 = charactersArray[idx2];\r\n    charactersArray[idx1] = chara2;\r\n    charactersArray[idx2] = chara1;\r\n  }\r\n\r\n  return charactersArray;\r\n}\r\n\r\n// ステージ設定\r\nexport interface StageConfig {\r\n  // ステージ種別\r\n  stageType: PracticeStageType;\r\n\r\n  // 利用する文字種別\r\n  useCharacterTypes: PracticeCharacterType[];\r\n\r\n  // BGM\r\n  backgroundMusic: string;\r\n\r\n  // 有効なキー\r\n  enabledKeys: string;\r\n\r\n  // 重点キー\r\n  importantKeys: string;\r\n\r\n  // 入力する「文字」の発射間隔\r\n  fireInterval: number;\r\n}\r\n\r\n/**\r\n * ステージ設定を取得する\r\n * @param practiceLevel 練習レベル\r\n */\r\nfunction getStageConfig(practiceLevel: number): StageConfig {\r\n  const stateConfig: StageConfig[] = [\r\n    // LEVEL 1\r\n    {\r\n      stageType: 'sakura',\r\n      useCharacterTypes: ['bird', 'sakura'],\r\n      backgroundMusic: SoundResources.bgmStageSakura,\r\n      enabledKeys: 'DFJK',\r\n      importantKeys: '',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 2\r\n    {\r\n      stageType: 'sakura',\r\n      useCharacterTypes: ['bird', 'sakura'],\r\n      backgroundMusic: SoundResources.bgmStageSakura,\r\n      enabledKeys: 'SDFJKL',\r\n      importantKeys: 'SL',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 3\r\n    {\r\n      stageType: 'sakura',\r\n      useCharacterTypes: ['bird', 'sakura'],\r\n      backgroundMusic: SoundResources.bgmStageSakura,\r\n      enabledKeys: 'ASDFGHJKL',\r\n      importantKeys: 'GH',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 4\r\n    {\r\n      stageType: 'sakura',\r\n      useCharacterTypes: ['bird', 'sakura'],\r\n      backgroundMusic: SoundResources.bgmStageSakura,\r\n      enabledKeys: 'RUASDFGHJKL',\r\n      importantKeys: 'RU',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 5\r\n    {\r\n      stageType: 'goldfish',\r\n      useCharacterTypes: ['goldfish', 'blackfish', 'catfish'],\r\n      backgroundMusic: SoundResources.bgmStageGoldfish,\r\n      enabledKeys: 'ERUIASDFGHJKL',\r\n      importantKeys: 'EI',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 6\r\n    {\r\n      stageType: 'goldfish',\r\n      useCharacterTypes: ['goldfish', 'blackfish', 'catfish'],\r\n      backgroundMusic: SoundResources.bgmStageGoldfish,\r\n      enabledKeys: 'WERUIOASDFGHJKL',\r\n      importantKeys: 'WO',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 7\r\n    {\r\n      stageType: 'goldfish',\r\n      useCharacterTypes: ['goldfish', 'blackfish', 'catfish'],\r\n      backgroundMusic: SoundResources.bgmStageGoldfish,\r\n      enabledKeys: 'QWERUIOPASDFGHJKL',\r\n      importantKeys: 'QP',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 8\r\n    {\r\n      stageType: 'goldfish',\r\n      useCharacterTypes: ['goldfish', 'blackfish', 'catfish'],\r\n      backgroundMusic: SoundResources.bgmStageGoldfish,\r\n      enabledKeys: 'QWERTYUIOPASDFGHJKL',\r\n      importantKeys: 'TY',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 9\r\n    {\r\n      stageType: 'sunflower',\r\n      useCharacterTypes: ['dragonfly', 'ladybird'],\r\n      backgroundMusic: SoundResources.bgmStageSunflower,\r\n      enabledKeys: 'QWERTYUIOPASDFGHJKLVN',\r\n      importantKeys: 'VN',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 10\r\n    {\r\n      stageType: 'sunflower',\r\n      useCharacterTypes: ['dragonfly', 'ladybird'],\r\n      backgroundMusic: SoundResources.bgmStageSunflower,\r\n      enabledKeys: 'QWERTYUIOPASDFGHJKLCVNM',\r\n      importantKeys: 'CM',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 11\r\n    {\r\n      stageType: 'sunflower',\r\n      useCharacterTypes: ['dragonfly', 'ladybird'],\r\n      backgroundMusic: SoundResources.bgmStageSunflower,\r\n      enabledKeys: 'QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: 'ZXB',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 12\r\n    {\r\n      stageType: 'sunflower',\r\n      useCharacterTypes: ['dragonfly', 'ladybird'],\r\n      backgroundMusic: SoundResources.bgmStageSunflower,\r\n      enabledKeys: '57QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '57',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 13\r\n    {\r\n      stageType: 'seabed',\r\n      useCharacterTypes: ['turtle', 'octopus', 'blowfish', 'shark'],\r\n      backgroundMusic: SoundResources.bgmStageSeabed,\r\n      enabledKeys: '4578QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '48',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 14\r\n    {\r\n      stageType: 'seabed',\r\n      useCharacterTypes: ['turtle', 'octopus', 'blowfish', 'shark'],\r\n      backgroundMusic: SoundResources.bgmStageSeabed,\r\n      enabledKeys: '345789QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '39',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 15\r\n    {\r\n      stageType: 'seabed',\r\n      useCharacterTypes: ['turtle', 'octopus', 'blowfish', 'shark'],\r\n      backgroundMusic: SoundResources.bgmStageSeabed,\r\n      enabledKeys: '23457890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '20',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 16\r\n    {\r\n      stageType: 'seabed',\r\n      useCharacterTypes: ['turtle', 'octopus', 'blowfish', 'shark'],\r\n      backgroundMusic: SoundResources.bgmStageSeabed,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '16',\r\n      fireInterval: 2000,\r\n    },\r\n    // LEVEL 17\r\n    {\r\n      stageType: 'halloween',\r\n      useCharacterTypes: ['bat', 'blackcat', 'ghost', 'pumpkin', 'witch'],\r\n      backgroundMusic: SoundResources.bgmStageHalloween,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '',\r\n      fireInterval: 1800,\r\n    },\r\n    // LEVEL 18\r\n    {\r\n      stageType: 'halloween',\r\n      useCharacterTypes: ['bat', 'blackcat', 'ghost', 'pumpkin', 'witch'],\r\n      backgroundMusic: SoundResources.bgmStageHalloween,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '',\r\n      fireInterval: 1600,\r\n    },\r\n    // LEVEL 19\r\n    {\r\n      stageType: 'halloween',\r\n      useCharacterTypes: ['bat', 'blackcat', 'ghost', 'pumpkin', 'witch'],\r\n      backgroundMusic: SoundResources.bgmStageHalloween,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '',\r\n      fireInterval: 1400,\r\n    },\r\n    // LEVEL 20\r\n    {\r\n      stageType: 'halloween',\r\n      useCharacterTypes: ['bat', 'blackcat', 'ghost', 'pumpkin', 'witch'],\r\n      backgroundMusic: SoundResources.bgmStageHalloween,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '',\r\n      fireInterval: 1200,\r\n    },\r\n    // LEVEL 21（全）レベルクリアの後\r\n    {\r\n      stageType: 'halloween',\r\n      useCharacterTypes: ['bat', 'blackcat', 'ghost', 'pumpkin', 'witch'],\r\n      backgroundMusic: SoundResources.bgmStageHalloween,\r\n      enabledKeys: '1234567890QWERTYUIOPASDFGHJKLZXCVBNM',\r\n      importantKeys: '',\r\n      fireInterval: 1000,\r\n    },\r\n  ];\r\n  return stateConfig[practiceLevel - 1];\r\n}\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../TitlePageForm.css';\r\n\r\n// --------------------------------------------\r\n// タイトルロゴComponent\r\n// --------------------------------------------\r\ninterface OwnProps {}\r\n\r\ntype TitleLogoProps = OwnProps;\r\nexport const TitleLogo: React.FC<TitleLogoProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    titleLogo: 'kt-font-bold-stroke kt-text-shadow title-logo',\r\n  };\r\n\r\n  return <div className={cls.titleLogo}>Kids★Typing</div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../TitlePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 練習レベルラベル Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 練習レベル\r\n  practiceLevel: number;\r\n}\r\n\r\ntype PracticeLevelLabelProps = OwnProps;\r\nexport const PracticeLevelLabel: React.FC<PracticeLevelLabelProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    levelLabelFrame: 'kt-flex-vertical-left kt-floating-frame practice-level-label-frame',\r\n    levelLabel: 'practice-level-label',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.levelLabelFrame}>\r\n      <div className={cls.levelLabel}>れんしゅうのレベルは {props.practiceLevel} だよ</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../TitlePageForm.css';\r\n\r\n// --------------------------------------------\r\n// 練習開始ボタン Component\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 練習開始関数\r\n  startPractice: Function;\r\n}\r\n\r\ntype PracticeStartButtonProps = OwnProps;\r\nexport const PracticeStartButton: React.FC<PracticeStartButtonProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    startButtonFrame: 'kt-flex-vertical-center kt-box-shadow practice-start-button-frame',\r\n    startButton: 'kt-font practice-start-button',\r\n  };\r\n\r\n  return (\r\n    <div className={cls.startButtonFrame} onClick={() => props.startPractice()}>\r\n      <div className={cls.startButton}>START</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../TitlePageForm.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// --------------------------------------------\r\n// 練習レベルリセットボタン Component\r\n// ボタンが押下されると確認メッセージを表示して「はい」が選択された場合は練習レベルを１に戻す\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // 練習レベルリセット関数\r\n  resetPracticeLevel: Function;\r\n  // ダイアログ表示関数\r\n  openDialog: Function;\r\n  // ダイアログ消去関数\r\n  closeDialog: Function;\r\n  // ダイアログの表示状態（true:表示中、false:非表示）\r\n  openedDialog: boolean;\r\n}\r\n\r\ntype PracticeLevelResetButtonProps = OwnProps;\r\nexport const PracticeLevelResetButton: React.FC<PracticeLevelResetButtonProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    resetButtonFrame: 'kt-flex-vertical-center kt-box-shadow practice-level-reset-button-frame',\r\n    resetButton: 'kt-font practice-level-reset-button',\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* リセットボタン */}\r\n      <div className={cls.resetButtonFrame} onClick={() => props.openDialog()}>\r\n        <div className={cls.resetButton}>リセット</div>\r\n      </div>\r\n\r\n      {/* 練習レベルリセット確認ダイアログ */}\r\n      <Dialog\r\n        open={props.openedDialog}\r\n        onClose={() => props.closeDialog()}\r\n        aria-labelledby='practice-level-reset-dialog-title'\r\n        aria-describedby='practice-level-reset-dialog-description'\r\n      >\r\n        <DialogTitle id='practice-level-reset-dialog-title'>かくにん</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='practice-level-reset-dialog-description'>\r\n            れんしゅうのレベルをリセットするよ。<br></br>\r\n            レベルが１にもどるけど　だいじょうぶ？\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => props.closeDialog()} color='primary'>\r\n            やだよ～\r\n          </Button>\r\n          <Button onClick={() => props.resetPracticeLevel() && props.closeDialog()} color='primary'>\r\n            いいよ\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../TitlePageForm.css';\r\n\r\n// --------------------------------------------\r\n// ミュートボタン Component\r\n// ミュート状態に応じてミュートボタンとミュート解除ボタンを切り替えて表示する\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // ミュート関数\r\n  soundMute: Function;\r\n  // ミュート状態（true: ミュート中、false: ミュートではない）\r\n  soundMuting: boolean;\r\n}\r\n\r\ntype MuteButtonProps = OwnProps;\r\nexport const MuteButton: React.FC<MuteButtonProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    muteButton: 'kt-box-shadow mute-button-base mute-button',\r\n    unmuteButton: 'kt-box-shadow mute-button-base unmute-button',\r\n  };\r\n\r\n  return <div className={props.soundMuting ? cls.muteButton : cls.unmuteButton} onClick={() => props.soundMute()}></div>;\r\n};\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nimport '../../common/KidsTypingCommon.css';\r\nimport './TitlePageForm.css';\r\n\r\nimport { TitleLogo } from './presentations/TitleLogo';\r\nimport { PracticeLevelLabel } from './presentations/PracticeLevelLabel';\r\nimport { PracticeStartButton } from './presentations/PracticeStartButton';\r\nimport { PracticeLevelResetButton } from './presentations/PracticeLevelResetButton';\r\nimport { MuteButton } from './presentations/MuteButton';\r\nimport { BackgroundMusic } from '../../common/BackgroundMusic';\r\nimport { SoundEffect } from '../../common/SoundEffect';\r\nimport { SoundResources } from '../../../SoundResources';\r\nimport { SoundStatus } from '../../../store/reducers/SoundReducer';\r\n\r\n// --------------------------------------------\r\n// タイトルページコンテナから受け取るパラメータの定義\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // --------------------------------------------\r\n  // 表示用のパラメータ\r\n  // --------------------------------------------\r\n\r\n  // 練習レベル\r\n  practiceLevel: number;\r\n\r\n  // BGMの状態\r\n  bgmStatus: SoundStatus;\r\n\r\n  // 効果音の状態配列\r\n  soundEffectList: SoundStatus[];\r\n\r\n  // ミュート状態（true: ミュート中、false: ミュート解除中）\r\n  soundMuting: boolean;\r\n\r\n  // ダイアログの表示状態（true: 表示中、false: 非表示）\r\n  openedDialog: boolean;\r\n\r\n  // --------------------------------------------\r\n  // 状態更新関数\r\n  // --------------------------------------------\r\n\r\n  // 練習開始\r\n  startPractice: Function;\r\n\r\n  // ダイアログを開く\r\n  openDialog: Function;\r\n\r\n  // ダイアログを閉じる\r\n  closeDialog: Function;\r\n\r\n  // WebStrageに保存している練習レベルをロード\r\n  loadPracticeLevel: Function;\r\n\r\n  // 練習レベルのリセット（レベル１に戻す）\r\n  resetPracticeLevel: Function;\r\n\r\n  // 効果音を鳴らす\r\n  playingSoundEffect: Function;\r\n\r\n  // BGMを停止する\r\n  stoppedBgm: Function;\r\n\r\n  // 効果音を一括停止する\r\n  stoppedSoundEffect: Function;\r\n\r\n  // ミュート(BGM、効果音の)\r\n  soundMute: Function;\r\n\r\n  // ミュートのON、OFF切り替え\r\n  toggleSoundMute: Function;\r\n}\r\n\r\n// パラメータの型定義\r\ntype Props = OwnProps & RouteComponentProps<{soundMuting: string}>;\r\n\r\n// --------------------------------------------\r\n// タイトルページのForm Component\r\n// --------------------------------------------\r\nexport class TitlePageForm extends React.Component<Props> {\r\n  render() {\r\n\r\n    // CSSを定義（クラスの定義が長くなってJSXの可読性が悪くなるので一旦変数に格納）\r\n    const cls = {\r\n      pageBackground: 'kt-box-fit title-page-background',\r\n      outerFrame: 'kt-box-fit title-page-outer-frame',\r\n      innerFrame: 'kt-floating-frame kt-flex-vertical-left title-page-inner-frame',\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* タイトル画面の背景画像 */}\r\n        <div className={cls.pageBackground}></div>\r\n\r\n        {/* タイトル画面の背景（枠の外側・画面全体） */}\r\n        <div className={cls.outerFrame}>\r\n          {/* タイトル画面（枠の中・タイトル画面） */}\r\n          <div className={cls.innerFrame}>\r\n            {/* タイトルロゴ */}\r\n            <TitleLogo></TitleLogo>\r\n\r\n            {/* 練習レベル */}\r\n            <PracticeLevelLabel practiceLevel={this.props.practiceLevel}></PracticeLevelLabel>\r\n\r\n            {/* 練習開始ボタン */}\r\n            <PracticeStartButton startPractice={() => this.onPracticeStart()}></PracticeStartButton>\r\n\r\n            {/* 練習レベルリセットボタン */}\r\n            <PracticeLevelResetButton\r\n              resetPracticeLevel={this.props.resetPracticeLevel}\r\n              openDialog={this.props.openDialog}\r\n              closeDialog={this.props.closeDialog}\r\n              openedDialog={this.props.openedDialog}\r\n            ></PracticeLevelResetButton>\r\n\r\n            {/* ミュートボタン */}\r\n            <MuteButton soundMute={this.props.toggleSoundMute} soundMuting={this.props.soundMuting}></MuteButton>\r\n          </div>\r\n        </div>\r\n\r\n        {/* BGM */}\r\n        <BackgroundMusic bgmStatus={this.props.bgmStatus} soundMuting={this.props.soundMuting}></BackgroundMusic>\r\n\r\n        {/* 効果音 */}\r\n        <SoundEffect soundEffectList={this.props.soundEffectList} soundMuting={this.props.soundMuting}></SoundEffect>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * コンポーネントがDOMに追加された直後に呼び出されるライフサイクルメソッド\r\n   * 練習レベルをロードする\r\n   */\r\n  componentDidMount() {\r\n    // 練習レベルをロードする\r\n    this.props.loadPracticeLevel();\r\n    // ミュート状態を設定する\r\n    if ((typeof this.props.match.params.soundMuting) === 'undefined' || this.props.match.params.soundMuting) {\r\n      this.props.soundMute();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 練習開始ボタンのイベントハンドラー\r\n   * BGMを停止して、ボタン押下用の効果音を鳴動して、練習ページに画面遷移する\r\n   * 本当はタイトルページコンテナに実装したいが、履歴がここでしか利用できないのでここに実装している\r\n   */\r\n  onPracticeStart(): void {\r\n    // BGMを停止\r\n    this.props.stoppedBgm();\r\n\r\n    // ボタン押下用の効果音を鳴らす\r\n    this.props.playingSoundEffect(SoundResources.seTitleStart);\r\n\r\n    // 即画面遷移すると効果音がならないので、１秒後に画面遷移する\r\n    setTimeout(\r\n      () => {\r\n        this.props.stoppedSoundEffect();\r\n        this.props.startPractice();\r\n      },\r\n      1000,\r\n      this\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TitlePageForm);\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { SoundResources } from '../SoundResources';\r\nimport { TitlePageForm } from '../components/pages/title-page/TitlePageForm';\r\nimport { TitleActions } from '../store/actions/TitleAction';\r\nimport { SoundActions } from '../store/actions/SoundActions';\r\nimport store, { AppState } from '../store/KidsTypingStore';\r\n\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return {\r\n    // 練習レベル\r\n    practiceLevel: appState.titleState.practiceLevel,\r\n\r\n    // ダイアログの開閉状態\r\n    openedDialog: appState.titleState.openedDialog,\r\n\r\n    // BGMの状態\r\n    bgmStatus: appState.soundState.bgmStatus,\r\n\r\n    // 効果音状態リスト\r\n    soundEffectList: appState.soundState.soundEffectList,\r\n\r\n    // ミュート状態\r\n    soundMuting: appState.soundState.soundMuting,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    // 練習レベルロード（web strageからのロード）\r\n    loadPracticeLevel: () => dispatch(TitleActions.LOAD_PRACTICE_LEVEL()),\r\n\r\n    // 練習レベルリセット（レベル１に戻す）\r\n    resetPracticeLevel: () => resetPracticeLevel(),\r\n\r\n    // 練習開始\r\n    startPractice: () => startPractice(),\r\n\r\n    // BGM開始\r\n    playingBgm: (bgmUrl: string) => dispatch(SoundActions.PLAYING_BGM({ bgmUrl: bgmUrl })),\r\n\r\n    // BGM停止\r\n    stoppedBgm: () => dispatch(SoundActions.STOPPED_BGM()),\r\n\r\n    // 効果音鳴動\r\n    playingSoundEffect: (soundUrl: string) => dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: soundUrl })),\r\n\r\n    // 効果音停止\r\n    stoppedSoundEffect: () => dispatch(SoundActions.STOPPED_SOUND_EFFECT()),\r\n\r\n    // ミュート\r\n    soundMute: () => soundMute(),\r\n\r\n    // ミュート（ON、OFFを繰り返す）\r\n    toggleSoundMute: () => store.getState().soundState.soundMuting ? soundUnmute() : soundMute(),\r\n\r\n    // ダイアログを開く\r\n    openDialog: () => dispatch(TitleActions.OPEN_DIALOG()),\r\n\r\n    // ダイアログを閉じる\r\n    closeDialog: () => dispatch(TitleActions.CLOSE_DIALOG()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TitlePageForm);\r\n\r\nfunction startPractice() {\r\n  // 練習画面に遷移する\r\n  window.location.replace(process.env.PUBLIC_URL + '/practice/' + (store.getState().soundState.soundMuting ? 'true' : 'false'));\r\n}\r\n\r\n/**\r\n * 練習レベルリセット\r\n * 練習レベルを１に戻してweb stroageに保存する\r\n */\r\nfunction resetPracticeLevel() {\r\n  store.dispatch(TitleActions.RESET_PRACTICE_LEVEL());\r\n  store.dispatch(TitleActions.UPDATE_PRACTICE_LEVEL());\r\n  return true;\r\n}\r\n\r\n/**\r\n * ミュート\r\n * BGMと全効果音を停止してミュート状態を設定する\r\n */\r\nfunction soundMute() {\r\n  store.dispatch(SoundActions.MUTE());\r\n  store.dispatch(SoundActions.STOPPED_BGM());\r\n  store.dispatch(SoundActions.STOPPED_SOUND_EFFECT());\r\n}\r\n\r\n/**\r\n * ミュート解除\r\n * ミュート状態を解除してタイトル画面用BGMを開始する\r\n */\r\nfunction soundUnmute() {\r\n  store.dispatch(SoundActions.UNMUTE());\r\n  store.dispatch(SoundActions.PLAYING_BGM({ bgmUrl: SoundResources.bgmTitle }));\r\n}\r\n","import React from 'react';\r\n\r\nimport '../../../common/KidsTypingCommon.css';\r\nimport '../EndingPageForm.css';\r\n\r\n// --------------------------------------------\r\n// エンディングロゴComponent\r\n// --------------------------------------------\r\ninterface OwnProps {}\r\n\r\ntype EndingLogoProps = OwnProps;\r\nexport const EndingLogo: React.FC<EndingLogoProps> = (props) => {\r\n  // CSSを定義\r\n  const cls = {\r\n    endingLogo: 'kt-font-bold-stroke kt-text-shadow ending-logo',\r\n  };\r\n\r\n  return <div className={cls.endingLogo}>ぜんぶクリア<br></br>おめでとう！</div>;\r\n};\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nimport '../../common/KidsTypingCommon.css';\r\nimport './EndingPageForm.css';\r\n\r\nimport { EndingLogo } from './presentations/EndingLogo';\r\nimport { BackgroundMusic } from '../../common/BackgroundMusic';\r\nimport { SoundEffect } from '../../common/SoundEffect';\r\nimport { SoundStatus } from '../../../store/reducers/SoundReducer';\r\nimport { CharacterState, EffectorState } from '../../../store/reducers/TypingEngineReducer';\r\nimport { CharacterSakura } from '../practice-page/presentations/stages/sakura/CharacterSakura';\r\nimport { CharacterBird } from '../practice-page/presentations/stages/sakura/CharacterBird';\r\nimport { CharacterGoldfish } from '../practice-page/presentations/stages/goldfish/CharacterGoldfish';\r\nimport { CharacterBlackfish } from '../practice-page/presentations/stages/goldfish/CharacterBlackfish';\r\nimport { CharacterDragonfly } from '../practice-page/presentations/stages/sunflower/CharacterDragonfly';\r\nimport { CharacterLadybird } from '../practice-page/presentations/stages/sunflower/CharacterLadybird';\r\nimport { CharacterTurtle } from '../practice-page/presentations/stages/seabed/CharacterTurtle';\r\nimport { CharacterOctopus } from '../practice-page/presentations/stages/seabed/CharacterOctopus';\r\nimport { CharacterBlowfish } from '../practice-page/presentations/stages/seabed/CharacterBlowfish';\r\nimport { CharacterShark } from '../practice-page/presentations/stages/seabed/CharacterShark';\r\nimport { CharacterBat } from '../practice-page/presentations/stages/helloween/CharacterBat';\r\nimport { CharacterBlackCat } from '../practice-page/presentations/stages/helloween/CharacterBlackCat';\r\nimport { CharacterGhost } from '../practice-page/presentations/stages/helloween/CharacterGhost';\r\nimport { CharacterPumpkin } from '../practice-page/presentations/stages/helloween/CharacterPumpkin';\r\nimport { CharacterWitch } from '../practice-page/presentations/stages/helloween/CharacterWitch';\r\nimport { CharacterCatfish } from '../practice-page/presentations/stages/goldfish/CharacterCatfish';\r\n\r\n// --------------------------------------------\r\n// タイトルページコンテナから受け取るパラメータの定義\r\n// --------------------------------------------\r\ninterface OwnProps {\r\n  // --------------------------------------------\r\n  // 表示用のパラメータ\r\n  // --------------------------------------------\r\n\r\n  // 発射された「文字」の状態\r\n  characterStateList: CharacterState[];\r\n\r\n  // 画面の効果（アニメーション）状態\r\n  effectorStateList: EffectorState[];\r\n\r\n  // BGMの状態\r\n  bgmStatus: SoundStatus;\r\n\r\n  // 効果音の状態配列\r\n  soundEffectList: SoundStatus[];\r\n\r\n  // ミュート状態（true: ミュート中、false: ミュート解除中）\r\n  soundMuting: boolean;\r\n\r\n  // ダイアログの表示状態（true: 表示中、false: 非表示）\r\n  openedDialog: boolean;\r\n\r\n  // フェードアウトフラグ\r\n  fadeOut: boolean;\r\n\r\n  // --------------------------------------------\r\n  // 状態更新関数\r\n  // --------------------------------------------\r\n\r\n  // エンディングアニメーション開始\r\n  startEnding: Function;\r\n\r\n  // 画面フェードアウト\r\n  fadeOutEnding: Function;\r\n\r\n  // エンディング終了\r\n  endEnding: Function;\r\n\r\n  // ダイアログを開く\r\n  openDialog: Function;\r\n\r\n  // ダイアログを閉じる\r\n  closeDialog: Function;\r\n\r\n  // 効果音を鳴らす\r\n  playingSoundEffect: Function;\r\n\r\n  // BGMを停止する\r\n  stoppedBgm: Function;\r\n\r\n  // 効果音を一括停止する\r\n  stoppedSoundEffect: Function;\r\n\r\n  // ミュート(BGM、効果音の)\r\n  soundMute: Function;\r\n}\r\n\r\n// パラメータの型定義\r\ntype Props = OwnProps & RouteComponentProps<{ soundMuting: string }>;\r\n\r\n// --------------------------------------------\r\n// タイトルページのForm Component\r\n// --------------------------------------------\r\nexport class EndingPageForm extends React.Component<Props> {\r\n  render() {\r\n    // CSSを定義（クラスの定義が長くなってJSXの可読性が悪くなるので一旦変数に格納）\r\n    const cls = {\r\n      pageBackground: 'kt-box-fit ending-page-background',\r\n      outerFrame: 'kt-box-fit ending-page-outer-frame',\r\n      innerFrame: 'kt-floating-frame kt-flex-vertical-left ending-page-inner-frame',\r\n    };\r\n\r\n    const characters: any = [];\r\n    this.props.characterStateList.forEach((c, idx) => {\r\n    // キャラクターコンポーネントに設定する属性を構築\r\n    const componentAttr = {\r\n      isHead: idx === 0,\r\n      componentId: c.componentId,\r\n      character: c.character,\r\n      top: c.top,\r\n      left: c.left,\r\n      charcterState: c.characterState,\r\n    };\r\n\r\n      if (c.practiceCharacterType === 'sakura') {\r\n        // 入力文字の種別が「桜」の場合\r\n        characters.push(<CharacterSakura {...componentAttr}></CharacterSakura>);\r\n      } else if (c.practiceCharacterType === 'bird') {\r\n        // 入力文字の種別が「小鳥」の場合\r\n        characters.push(<CharacterBird {...componentAttr}></CharacterBird>);\r\n      } else if (c.practiceCharacterType === 'goldfish') {\r\n        // 入力文字の種別が「金魚」の場合\r\n        characters.push(<CharacterGoldfish {...componentAttr}></CharacterGoldfish>);\r\n      } else if (c.practiceCharacterType === 'blackfish') {\r\n        // 入力文字の種別が「出目金」の場合\r\n        characters.push(<CharacterBlackfish {...componentAttr}></CharacterBlackfish>);\r\n      } else if (c.practiceCharacterType === 'catfish') {\r\n        // 入力文字の種別が「ナマズ」の場合\r\n        characters.push(<CharacterCatfish {...componentAttr}></CharacterCatfish>);\r\n      } else if (c.practiceCharacterType === 'dragonfly') {\r\n        // 入力文字の種別が「とんぼ」の場合\r\n        characters.push(<CharacterDragonfly {...componentAttr}></CharacterDragonfly>);\r\n      } else if (c.practiceCharacterType === 'ladybird') {\r\n        // 入力文字の種別が「てんとうむし」の場合\r\n        characters.push(<CharacterLadybird {...componentAttr}></CharacterLadybird>);\r\n      } else if (c.practiceCharacterType === 'turtle') {\r\n        // 入力文字の種別が「亀」の場合\r\n        characters.push(<CharacterTurtle {...componentAttr}></CharacterTurtle>);\r\n      } else if (c.practiceCharacterType === 'octopus') {\r\n        // 入力文字の種別が「タコ」の場合\r\n        characters.push(<CharacterOctopus {...componentAttr}></CharacterOctopus>);\r\n      } else if (c.practiceCharacterType === 'blowfish') {\r\n        // 入力文字の種別が「フグ」の場合\r\n        characters.push(<CharacterBlowfish {...componentAttr}></CharacterBlowfish>);\r\n      } else if (c.practiceCharacterType === 'shark') {\r\n        // 入力文字の種別が「サメ」の場合\r\n        characters.push(<CharacterShark {...componentAttr}></CharacterShark>);\r\n      } else if (c.practiceCharacterType === 'bat') {\r\n        // 入力文字の種別が「コウモリ」の場合\r\n        characters.push(<CharacterBat {...componentAttr}></CharacterBat>);\r\n      } else if (c.practiceCharacterType === 'blackcat') {\r\n        // 入力文字の種別が「黒猫」の場合\r\n        characters.push(<CharacterBlackCat {...componentAttr}></CharacterBlackCat>);\r\n      } else if (c.practiceCharacterType === 'ghost') {\r\n        // 入力文字の種別が「お化け」の場合\r\n        characters.push(<CharacterGhost {...componentAttr}></CharacterGhost>);\r\n      } else if (c.practiceCharacterType === 'pumpkin') {\r\n        // 入力文字の種別が「かぼちゃ」の場合\r\n        characters.push(<CharacterPumpkin {...componentAttr}></CharacterPumpkin>);\r\n      } else if (c.practiceCharacterType === 'witch') {\r\n        // 入力文字の種別が「魔女」の場合\r\n        characters.push(<CharacterWitch {...componentAttr}></CharacterWitch>);\r\n      }\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* タイトル画面の背景画像 */}\r\n        <div className={cls.pageBackground}></div>\r\n\r\n        {/* タイトル画面の背景（枠の外側・画面全体） */}\r\n        <div className={cls.outerFrame}>\r\n          {/* タイトル画面（枠の中・タイトル画面） */}\r\n          <div className={cls.innerFrame + (this.props.fadeOut ? ' ending-fade-out' : '')}>\r\n            {/* タイトルロゴ（zindex23はロゴを最前面にするための設定） */}\r\n            <div className='kt-box-fit kt-flex-vertical-top-center' style={{ zIndex: 23 }}>\r\n              <EndingLogo></EndingLogo>\r\n            </div>\r\n\r\n            {/* キャラクター（zindex22は背景とロゴの間にキャラクターを表示するための設定） */}\r\n            <div className='kt-box-fit' style={{ zIndex: 22 }}>\r\n              <div className='kt-flex-horizontal-left ending-animation-frame'>{characters}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* BGM */}\r\n        <BackgroundMusic bgmStatus={this.props.bgmStatus} soundMuting={this.props.soundMuting}></BackgroundMusic>\r\n\r\n        {/* 効果音 */}\r\n        <SoundEffect soundEffectList={this.props.soundEffectList} soundMuting={this.props.soundMuting}></SoundEffect>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * コンポーネントがDOMに追加された直後に呼び出されるライフサイクルメソッド\r\n   * ミュート中である場合はミュートを設定する\r\n   */\r\n  componentDidMount() {\r\n    // ミュート状態を設定する\r\n    if (!this.props.match.params.soundMuting) {\r\n      this.props.soundMute();\r\n    }\r\n\r\n    // ５秒後にキャラクターを登場させる\r\n    setTimeout(\r\n      () => {\r\n        this.props.startEnding();\r\n      },\r\n      5 * 1000,\r\n      this\r\n    );\r\n\r\n    // ６０秒後にタイトル画面をフェードアウト\r\n    setTimeout(\r\n      () => {\r\n        this.props.fadeOutEnding();\r\n      },\r\n      60 * 1000,\r\n      this\r\n    );\r\n\r\n    // ７０秒後にタイトル画面に戻る\r\n    setTimeout(\r\n      () => {\r\n        this.props.endEnding();\r\n      },\r\n      70 * 1000,\r\n      this\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EndingPageForm);\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { SoundActions } from '../store/actions/SoundActions';\r\nimport store, { AppState } from '../store/KidsTypingStore';\r\nimport { EndingPageForm } from '../components/pages/ending-page/EndingPageForm';\r\nimport { SoundState } from '../store/reducers/SoundReducer';\r\nimport { SoundResources } from '../SoundResources';\r\nimport { TypingEngineActions, PracticeCharacterType } from '../store/actions/TypingEngineAction';\r\nimport { EndingActions } from '../store/actions/EndingAction';\r\n\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return {\r\n    // タイプ練習の「文字」状態リスト\r\n    characterStateList: appState.typingEngineState.characterStateList,\r\n\r\n    // エフェクト状態リスト\r\n    effectorStateList: appState.typingEngineState.effectorStateList,\r\n\r\n    // BGMの状態\r\n    bgmStatus: appState.soundState.bgmStatus,\r\n\r\n    // 効果音状態リスト\r\n    soundEffectList: appState.soundState.soundEffectList,\r\n\r\n    // ミュート状態\r\n    soundMuting: appState.soundState.soundMuting,\r\n\r\n    // フェードアウトフラグ\r\n    fadeOut: appState.endingState.fadeOut,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    // エンディングアニメーション開始\r\n    startEnding: () => startEnding(),\r\n\r\n    // エンディングフェードアウト\r\n    fadeOutEnding: () => dispatch(EndingActions.FADE_OUT_ENDING()),\r\n\r\n    // エンディング終了\r\n    endEnding: () => endEnding(),\r\n\r\n    // BGM開始\r\n    playingBgm: (bgmUrl: string) => dispatch(SoundActions.PLAYING_BGM({ bgmUrl: bgmUrl })),\r\n\r\n    // BGM停止\r\n    stoppedBgm: () => dispatch(SoundActions.STOPPED_BGM()),\r\n\r\n    // 効果音鳴動\r\n    playingSoundEffect: (soundUrl: string) => dispatch(SoundActions.PLAYING_SOUND_EFFECT({ soundUrl: soundUrl })),\r\n\r\n    // 効果音停止\r\n    stoppedSoundEffect: () => dispatch(SoundActions.STOPPED_SOUND_EFFECT()),\r\n\r\n    // ミュート（ON、OFFを繰り返す）\r\n    soundMute: () => ((store.getState().soundState as SoundState).soundMuting ? soundUnmute() : soundMute()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EndingPageForm);\r\n\r\n/**\r\n * エンディング開始\r\n */\r\nvar intervalHandle: any = null;\r\nfunction startEnding(): void {\r\n  // エンディングに登場するキャラクター\r\n  const characters: PracticeCharacterType[] = [\r\n    'sakura',\r\n    'goldfish',\r\n    'bird',\r\n    'dragonfly',\r\n    'ladybird',\r\n    'blackfish',\r\n    'catfish',\r\n    'turtle',\r\n    'octopus',\r\n    'blowfish',\r\n    'shark',\r\n    'bat',\r\n    'blackcat',\r\n    'ghost',\r\n    'pumpkin',\r\n    'witch'\r\n  ];\r\n\r\n  // ステージで利用する文字種別を選択する\r\n  store.dispatch(TypingEngineActions.SELECTED_CHARACTER_TYPE({ characterTypes: characters }));\r\n\r\n  // ステージ毎のBGMを設定する\r\n  store.dispatch(SoundActions.CHANGED_BGM({ bgmUrl: SoundResources.bgmEnding }));\r\n\r\n  // エンディングメインループを開始する（FPS60）\r\n  const fps = 60;\r\n  intervalHandle = setInterval(main, 1000 / fps, fps, 2000);\r\n}\r\n\r\n/**\r\n * エンディング終了\r\n */\r\nfunction endEnding(): void {\r\n\r\n  // エンディングメインループ用のインターバルをクリア\r\n  clearInterval(intervalHandle);\r\n\r\n  // タイトル画面に遷移する\r\n  window.location.replace(process.env.PUBLIC_URL + '/title/' + (store.getState().soundState.soundMuting ? 'true' : 'false'));\r\n}\r\n\r\n/**\r\n * エンディング画面のメインループ\r\n * 定期的に「文字」を発射して「文字」を移動させるために時間経過アクションをディスパッチする。\r\n * cntとfireCharaIndexを何とかしたい・・・\r\n */\r\nvar cnt = 0;\r\nfunction main(fps: number, fireInterval: number) {\r\n  // 時間を進める\r\n  store.dispatch(TypingEngineActions.TICK());\r\n\r\n  // 「文字」出力間隔に達した場合は「文字」を出力する\r\n  if (cnt * (1000 / fps) > fireInterval) {\r\n    store.dispatch(\r\n      TypingEngineActions.FIRE_CHARACTER({\r\n        character: '',\r\n      })\r\n    );\r\n    cnt = 0;\r\n  }\r\n  cnt++;\r\n}\r\n\r\n/**\r\n * ミュート\r\n * BGMと全効果音を停止してミュート状態を設定する\r\n */\r\nfunction soundMute() {\r\n  store.dispatch(SoundActions.MUTE());\r\n  store.dispatch(SoundActions.STOPPED_BGM());\r\n  store.dispatch(SoundActions.STOPPED_SOUND_EFFECT());\r\n}\r\n\r\n/**\r\n * ミュート解除\r\n * ミュート状態を解除してタイトル画面用BGMを開始する\r\n */\r\nfunction soundUnmute() {\r\n  store.dispatch(SoundActions.UNMUTE());\r\n  store.dispatch(SoundActions.PLAYING_BGM({ bgmUrl: SoundResources.bgmEnding }));\r\n}\r\n","import React from 'react';\r\nimport PracticePageContainer from './containers/PracticePageContainer';\r\nimport TitlePageContainer from './containers/TitlePageContainer';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport EndingPageContainer from './containers/EndingPageContainer';\r\n\r\nconst App: React.FC = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n\r\n          {/* kids-typingの入り口 */}\r\n          <Route path='/' exact>\r\n            <Redirect to='/title/true/'></Redirect>\r\n          </Route>\r\n\r\n          {/* タイトルページ（練習後に戻った時）*/}\r\n          <Route path='/title/:soundMuting' exact component={TitlePageContainer}></Route>\r\n\r\n          {/* 練習ページ */}\r\n          <Route path='/practice/:soundMuting' exact component={PracticePageContainer}></Route>\r\n\r\n          {/* エンディングページ */}\r\n          <Route path='/ending/:soundMuting' exact component={EndingPageContainer}></Route>\r\n\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/KidsTypingStore';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}